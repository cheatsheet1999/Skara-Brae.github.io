<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LeetCode Q11 Container With Most Water</title>
    <url>/2021/01/02/LeetCode-Q11-Container-With-Most-Water/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public int maxArea(int[] height)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;initialize area, most left side and right side</span><br><span class="line">       int area &#x3D; 0, l &#x3D; 0, r &#x3D; height.length - 1;</span><br><span class="line">        &#x2F;&#x2F;as long as left is on the &quot;left&quot;</span><br><span class="line">        while(l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            area &#x3D; Math.max(area, Math.min(height[l], height[r]) * (r - l));</span><br><span class="line">            if(height[l] &lt; height[r])</span><br><span class="line">            &#123;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return area;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>LeetCode Q17 Letter Combinations of a Phone</title>
    <url>/2021/01/02/LeetCode-Q17-Letter-Combinations-of-a-Phone/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">  Map&lt;String, String&gt; phone &#x3D; new HashMap&lt;String, String&gt;() &#123;&#123;</span><br><span class="line">    put(&quot;2&quot;, &quot;abc&quot;);</span><br><span class="line">    put(&quot;3&quot;, &quot;def&quot;);</span><br><span class="line">    put(&quot;4&quot;, &quot;ghi&quot;);</span><br><span class="line">    put(&quot;5&quot;, &quot;jkl&quot;);</span><br><span class="line">    put(&quot;6&quot;, &quot;mno&quot;);</span><br><span class="line">    put(&quot;7&quot;, &quot;pqrs&quot;);</span><br><span class="line">    put(&quot;8&quot;, &quot;tuv&quot;);</span><br><span class="line">    put(&quot;9&quot;, &quot;wxyz&quot;);</span><br><span class="line">  &#125;&#125;;</span><br><span class="line"></span><br><span class="line">  List&lt;String&gt; output &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">  public void backtrack(String combination, String next_digits) &#123;</span><br><span class="line">    &#x2F;&#x2F; if there is no more digits to check</span><br><span class="line">    if (next_digits.length() &#x3D;&#x3D; 0) &#123;</span><br><span class="line">      &#x2F;&#x2F; the combination is done</span><br><span class="line">      output.add(combination);</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F; if there are still digits to check</span><br><span class="line">    else &#123;</span><br><span class="line">      &#x2F;&#x2F; iterate over all letters which map</span><br><span class="line">      &#x2F;&#x2F; the next available digit</span><br><span class="line">      String digit &#x3D; next_digits.substring(0, 1);</span><br><span class="line">      String letters &#x3D; phone.get(digit);</span><br><span class="line">      for (int i &#x3D; 0; i &lt; letters.length(); i++) &#123;</span><br><span class="line">        String letter &#x3D; phone.get(digit).substring(i, i + 1);</span><br><span class="line">        &#x2F;&#x2F; append the current letter to the combination</span><br><span class="line">        &#x2F;&#x2F; and proceed to the next digits</span><br><span class="line">        &#x2F;&#x2F; letter往后一直移动是因为从a到b,b到c， c到d。。。这样</span><br><span class="line">        backtrack(combination + letter, next_digits.substring(1));</span><br><span class="line">        &#x2F;&#x2F; backtrack(letter + combination, next_digit.substring(1));</span><br><span class="line">&#x2F;&#x2F;Output [&quot;da&quot;,&quot;ea&quot;,&quot;fa&quot;,&quot;db&quot;,&quot;eb&quot;,&quot;fb&quot;,&quot;dc&quot;,&quot;ec&quot;,&quot;fc&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  public List&lt;String&gt; letterCombinations(String digits) &#123;</span><br><span class="line">    if (digits.length() !&#x3D; 0)</span><br><span class="line">      backtrack(&quot;&quot;, digits);</span><br><span class="line">    return output;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q12 3 sum</title>
    <url>/2021/01/02/LeetCode-Q12-3-sum/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;List&lt;Integer&gt;&gt; threeSum(int[] nums)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;1.Sort array</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        &#x2F;&#x2F;2. Creat a double Linkedlist</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res &#x3D; new LinkedList&lt;&gt;();</span><br><span class="line">        for(int i &#x3D; 0; i &lt; nums.length - 2; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;3. if i &#x3D; 0 or the 2nd number is not equal to previous number</span><br><span class="line">            &#x2F;&#x2F;为了保证不加入重复的 list,因为是有序的，所以如果和前一个元素相同，只需要继续后移就可以</span><br><span class="line">            if(i &#x3D;&#x3D; 0 || (i &gt; 0 &amp;&amp; nums[i] !&#x3D; nums[i - 1]))</span><br><span class="line">            &#123;</span><br><span class="line">                 &#x2F;&#x2F;两个指针,并且头指针从i + 1开始，防止加入重复的元素</span><br><span class="line">                int lo &#x3D; i + 1, hi &#x3D; nums.length - 1, sum &#x3D; 0 - nums[i];</span><br><span class="line">                while(lo &lt; hi)</span><br><span class="line">                &#123;</span><br><span class="line">                    if(nums[lo] + nums[hi] &#x3D;&#x3D; sum)</span><br><span class="line">                    &#123;</span><br><span class="line">                        res.add(Arrays.asList(nums[i], nums[lo], nums[hi]));</span><br><span class="line">                        while(lo &lt; hi &amp;&amp; nums[lo] &#x3D;&#x3D; nums[lo + 1]) lo++;</span><br><span class="line">                        while(lo &lt; hi &amp;&amp; nums[hi] &#x3D;&#x3D; nums[hi - 1]) hi--;</span><br><span class="line">                        lo++;</span><br><span class="line">                        hi--;</span><br><span class="line">                    &#125;</span><br><span class="line">                    else if(nums[lo] + nums[hi] &lt; sum) lo++;</span><br><span class="line">                    else hi--;</span><br><span class="line">                    </span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q20 Valid Parentheses</title>
    <url>/2021/01/02/LeetCode-Q20-Valid-Parentheses/</url>
    <content><![CDATA[<p>括号匹配问题。<br>如果只有一种括号，我们完全可以用一个计数器 count ，遍历整个字符串，遇到左括号加 1 ，遇到右括号减 1，遍历结束后，如果 count 等于 0 ，则表示全部匹配。但如果有多种括号，像 ( [ ) ] 这种情况它依旧会得到 0，所以我们需要用其他的方法。</p>
<p>Stack！</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    public boolean isValid(String s)</span><br><span class="line">    &#123;</span><br><span class="line">        Stack&lt;Character&gt; brackets = new Stack&lt;Character&gt;();</span><br><span class="line">        <span class="keyword">for</span>(int i = 0; i &lt; s.length(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            char c = s.charAt(i);</span><br><span class="line">            switch(c)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;[&#x27;</span>:</span><br><span class="line">                brackets.push(c);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span>(!brackets.empty())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(brackets.peek() == <span class="string">&#x27;(&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            brackets.pop();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                    </span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span>(!brackets.empty())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(brackets.peek() == <span class="string">&#x27;&#123;&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            brackets.pop();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;]&#x27;</span>:</span><br><span class="line">                    <span class="keyword">if</span>(!brackets.empty())</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(brackets.peek() == <span class="string">&#x27;[&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            brackets.pop();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> brackets.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Stack</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q19 Remove Nth Node From End of List</title>
    <url>/2021/01/02/LeetCode-Q19-Remove-Nth-Node-From-End-of-List/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val &#x3D; x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public ListNode removeNthFromEnd(ListNode head, int n)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;1. create a dummyHead before the real head</span><br><span class="line">        ListNode dummyHead &#x3D; new ListNode(0);</span><br><span class="line">        dummyHead.next &#x3D; head;</span><br><span class="line">        ListNode first &#x3D; head;</span><br><span class="line">        int length &#x3D; 0;</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F;as long as first is not null, we increase length</span><br><span class="line">        &#x2F;&#x2F;and keep moving first</span><br><span class="line">        while(first !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            length++;</span><br><span class="line">            first &#x3D; first.next;</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;use length - n to locate the node we are going to delete</span><br><span class="line">        length -&#x3D;n;</span><br><span class="line">        first &#x3D; dummyHead;</span><br><span class="line">        while(length &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            length--;</span><br><span class="line">            first &#x3D; first.next;</span><br><span class="line">        &#125;</span><br><span class="line">        first.next &#x3D; first.next.next;</span><br><span class="line">        return dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q22 Generate Parentheses</title>
    <url>/2021/01/02/LeetCode-Q22-Generate%20Parentheses/</url>
    <content><![CDATA[<p>Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.</p>
<p>Example 1:</p>
<p>Input: n = 3<br>Output: [“((()))”,”(()())”,”(())()”,”()(())”,”()()()”]<br>Example 2:</p>
<p>Input: n = 1<br>Output: [“()”]</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution </span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;String&gt; generateParenthesis(int n)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;String&gt; ans &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line">        backtrack(ans, &quot;&quot;, 0, 0, n);</span><br><span class="line">        return ans;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void backtrack(List&lt;String&gt; ans, String cur, int open, int close, int max)</span><br><span class="line">    &#123;</span><br><span class="line">        if(cur.length() &#x3D;&#x3D; max * 2)</span><br><span class="line">        &#123;</span><br><span class="line">            ans.add(cur);</span><br><span class="line">        &#125;</span><br><span class="line">        if(open &lt; max)</span><br><span class="line">        &#123;</span><br><span class="line">            backtrack(ans, cur + &quot;(&quot;, open + 1, close, max);</span><br><span class="line">        &#125;</span><br><span class="line">        if(close &lt; open)</span><br><span class="line">        &#123;</span><br><span class="line">            backtrack(ans, cur + &quot;)&quot;, open, close + 1, max);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>ArrayList</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q21 Merge Two Sorted Lists</title>
    <url>/2021/01/02/LeetCode-Q21-Merge-Two-Sorted-Lists/</url>
    <content><![CDATA[<p>Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.</p>
<p>Input: l1 = [1,2,4], l2 = [1,3,4]<br>Output: [1,1,2,3,4,4]<br>Example 2:</p>
<p>Input: l1 = [], l2 = []<br>Output: []<br>Example 3:</p>
<p>Input: l1 = [], l2 = [0]<br>Output: [0]</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val &#x3D; x; &#125;</span><br><span class="line"> * </span><br><span class="line"> *&#x2F;</span><br><span class="line">class Solution </span><br><span class="line">&#123;</span><br><span class="line">    public ListNode mergeTwoLists(ListNode l1, ListNode l2) </span><br><span class="line">    &#123;</span><br><span class="line">        if(l1 &#x3D;&#x3D; null) return l2;</span><br><span class="line">        if(l2 &#x3D;&#x3D; null) return l1;</span><br><span class="line">        </span><br><span class="line">        if(l1.val &lt; l2.val)</span><br><span class="line">        &#123;</span><br><span class="line">            l1.next &#x3D; mergeTwoLists(l1.next, l2);</span><br><span class="line">            return l1;</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            l2.next &#x3D; mergeTwoLists(l1, l2.next);</span><br><span class="line">            return l2;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>LeetCode Q5 Longest Palindromic Substring</title>
    <url>/2021/01/02/LeetCode-Q5-Longest-Palindromic-Substring/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public String longestPalindrome(String s)</span><br><span class="line">    &#123;</span><br><span class="line">        if(s &#x3D;&#x3D; null || s.length() &lt; 1) return &quot;&quot;;</span><br><span class="line">        int start &#x3D; 0, end &#x3D; 0;</span><br><span class="line">        for(int i &#x3D; 0; i &lt; s.length(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int len1 &#x3D; expandAroundCenter(s, i, i);</span><br><span class="line">            int len2 &#x3D; expandAroundCenter(s, i, i + 1);</span><br><span class="line">            int len &#x3D; Math.max(len1, len2);</span><br><span class="line">            if(len &gt; end - start)</span><br><span class="line">            &#123;</span><br><span class="line">                start &#x3D; i - (len-1)&#x2F;2;</span><br><span class="line">                end &#x3D; i + len&#x2F;2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return s.substring(start, end + 1);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private int expandAroundCenter(String s, int left, int right)</span><br><span class="line">    &#123;</span><br><span class="line">        int L &#x3D; left, R &#x3D; right;</span><br><span class="line">        while(L &gt;&#x3D; 0 &amp;&amp; R &lt; s.length() &amp;&amp; s.charAt(L) &#x3D;&#x3D; s.charAt(R))</span><br><span class="line">        &#123;</span><br><span class="line">            L--;</span><br><span class="line">            R++;</span><br><span class="line">        &#125;</span><br><span class="line">        return R - L - 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">          </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>Leetcode Q1 Two Sum</title>
    <url>/2020/10/04/Leetcode%20Q1%20Two%20Sum/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public int[] twoSum(int[] nums, int target)</span><br><span class="line">    &#123;</span><br><span class="line">        Map&lt;Integer, Integer&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">        for(int i &#x3D; 0; i &lt; nums.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            int n &#x3D; target - nums[i];</span><br><span class="line">            if(map.containsKey(n))</span><br><span class="line">            &#123;</span><br><span class="line">                return new int[] &#123;map.get(n), i&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        map.put(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">    throw new IllegalArgumentException(&quot;No two sum solution&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode Q3 Longest Substring Without Repeating Characters</title>
    <url>/2021/01/01/Leetcode-Q3-Longest-Substring-Without-Repeating-Characters/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution </span><br><span class="line">&#123;</span><br><span class="line">    public int lengthOfLongestSubstring(String s) </span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F; s: &quot;abcabcbb&quot;</span><br><span class="line">        </span><br><span class="line">        HashMap&lt;Character, Integer&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">        &#x2F;&#x2F; s: &quot;abcabcbb&quot;</span><br><span class="line">           map: &#123;&#125; </span><br><span class="line">        </span><br><span class="line">        int ans &#x3D; 0;</span><br><span class="line">        &#x2F;&#x2F; s: &quot;abcabcbb&quot;</span><br><span class="line">           map: &#123;&#125;</span><br><span class="line">           ans: 0</span><br><span class="line">        </span><br><span class="line">        for(int i &#x3D; 0, j &#x3D; 0; j &lt; s.length(); j++)</span><br><span class="line">        &#123;</span><br><span class="line">        &#x2F;*</span><br><span class="line">        s: &quot;abcabcbb&quot;</span><br><span class="line">        map: &#123;&#125;</span><br><span class="line">        ans: 0</span><br><span class="line">        i: 0</span><br><span class="line">        j: 0</span><br><span class="line">        *&#x2F;</span><br><span class="line">            if(map.containsKey(s.charAt(j)))</span><br><span class="line">            &#123;</span><br><span class="line">                i &#x3D; Math.max(map.get(s.charAt(j)), i);</span><br><span class="line">            &#125;</span><br><span class="line">            ans &#x3D; Math.max(ans, j - i + 1);</span><br><span class="line">            &#x2F;*</span><br><span class="line">            s: &quot;abcabcbb&quot;</span><br><span class="line">            map: &#123;&#125;</span><br><span class="line">            ans: 1</span><br><span class="line">            i: 0</span><br><span class="line">            j: 0</span><br><span class="line">            *&#x2F;</span><br><span class="line">            </span><br><span class="line">            map.put(s.charAt(j), j + 1);</span><br><span class="line">            &#x2F;*</span><br><span class="line">            s: &quot;abcabcbb&quot;</span><br><span class="line">            map: &#123;&quot;a&quot;:1&#125;</span><br><span class="line">            ans: 1</span><br><span class="line">            i: 0</span><br><span class="line">            j: 0</span><br><span class="line">            *&#x2F;</span><br><span class="line">            </span><br><span class="line">            &#x2F;*</span><br><span class="line">            Second round</span><br><span class="line">            s: &quot;abcabcbb&quot;</span><br><span class="line">            map: &#123;&quot;a&quot;:1,&quot;b&quot;:2&#125;</span><br><span class="line">            ans: 2</span><br><span class="line">            i: 0</span><br><span class="line">            j: 1</span><br><span class="line">            *&#x2F;</span><br><span class="line">            </span><br><span class="line">            &#x2F;*</span><br><span class="line">            s: &quot;abcabcbb&quot;</span><br><span class="line">            map: &#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3&#125;</span><br><span class="line">            ans: 3</span><br><span class="line">            i: 0</span><br><span class="line">            j: 2</span><br><span class="line">            *&#x2F;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        return ans;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode Q2 Add Two Numbers</title>
    <url>/2021/01/01/Leetcode%20Q2%20Add%20Two%20Numbers/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val &#x3D; x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> *&#x2F;</span><br><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public ListNode addTwoNumbers(ListNode l1, ListNode l2)</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;initiate new dummyHead, it points to first node</span><br><span class="line">        ListNode dummyHead &#x3D; new ListNode(0);</span><br><span class="line">        &#x2F;&#x2F;ListNode should have p, q, curr</span><br><span class="line">        ListNode p &#x3D; l1, q &#x3D; l2, curr &#x3D; dummyHead;</span><br><span class="line">        &#x2F;&#x2F;Initiate a carry value</span><br><span class="line">        int carry &#x3D; 0;</span><br><span class="line">        while(p !&#x3D; null || q !&#x3D; null)</span><br><span class="line">        &#123;</span><br><span class="line">            int x &#x3D; (p !&#x3D; null) ? p.val : 0;</span><br><span class="line">            int y &#x3D; (q !&#x3D; null) ? q.val : 0;</span><br><span class="line">            int sum &#x3D; x + y + carry;</span><br><span class="line">            &#x2F;&#x2F;re-value carry</span><br><span class="line">            carry &#x3D; sum &#x2F; 10;</span><br><span class="line">            &#x2F;&#x2F;curr next node is backward</span><br><span class="line">            curr.next &#x3D; new ListNode(sum % 10);</span><br><span class="line">            curr &#x3D; curr.next;</span><br><span class="line">            if(p !&#x3D; null) p &#x3D; p.next;</span><br><span class="line">            if(q !&#x3D; null) q &#x3D; q.next;</span><br><span class="line">        &#125;</span><br><span class="line">        if(carry &gt; 1)</span><br><span class="line">        &#123;</span><br><span class="line">            curr.next &#x3D; new ListNode(carry);</span><br><span class="line">        &#125;</span><br><span class="line">        return dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown Grammar / Web Delopyment</title>
    <url>/2020/10/04/hello-world/</url>
    <content><![CDATA[<h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>Check <a href="https://hexo.io/docs/">documentation</a> for more info. </p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<h3 id="Generate-with-Debugger"><a href="#Generate-with-Debugger" class="headerlink" title="Generate with Debugger"></a>Generate with Debugger</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo s --debug</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="Frequently-Used-Color"><a href="#Frequently-Used-Color" class="headerlink" title="Frequently Used Color"></a>Frequently Used Color</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;font size&#x3D;5 color&#x3D;&quot;#3cff00&quot;&gt; Set Color and Font&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure>
<p><font size=5 color="#3cff00"> Set Color and Font</font><br><font size=5 color="#0048ff"> Set Color and Font</font><br><font size=5 color="#c800ff"> Set Color and Font</font><br><font size=5 color="#fc0303"> Set Color and Font</font></p>
<h3 id="Read-more-option"><a href="#Read-more-option" class="headerlink" title="Read more option"></a>Read more option</h3><p>Use <a id="more"></a> in the article to manually cut off article<br>According to the content of the article, this method can add <!--more--> tags in the appropriate position by yourself, which is flexible.</p>
<h3 id="Insert-images"><a href="#Insert-images" class="headerlink" title="Insert images"></a>Insert images</h3><p>Example:<br><img src="/images/jeremy-bishop-fhCD0DXhOUA-unsplash.jpg"></p>
<h3 id="Insert-web-links"><a href="#Insert-web-links" class="headerlink" title="Insert web links"></a>Insert web links</h3><p>[Instruction] (<a href="https://www.jianshu.com/p/191d1e21f7ed">https://www.jianshu.com/p/191d1e21f7ed</a>)</p>
<p><strong>html version</strong><br><a href="https://yuelinus.com" target="_blank">Skara-Brae</a></p>
<h2 id="Preview-by-using-vscode"><a href="#Preview-by-using-vscode" class="headerlink" title="Preview by using vscode"></a><strong>Preview by using vscode</strong></h2><p>Command+Shift+V for MacOS<br>Ctrl+Shift+V    for windows</p>
<h4 id="在复制的哔哩哔哩链接中输入以下代码方可兼容页面"><a href="#在复制的哔哩哔哩链接中输入以下代码方可兼容页面" class="headerlink" title="在复制的哔哩哔哩链接中输入以下代码方可兼容页面"></a><strong>在复制的哔哩哔哩链接中输入以下代码方可兼容页面</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">style&#x3D;&quot;width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=626357031&amp;bvid=BV1yt4y1Q7SS&amp;cid=210738676&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;style=&quot;width: 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;&quot;&gt; &lt;/iframe&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<iframe src="//player.bilibili.com/player.html?aid=626357031&bvid=BV1yt4y1Q7SS&cid=210738676&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"style="width= 100%; height: 500px; max-width: 100%；align:center; padding:20px 0;"> </iframe>

<p>AWS:</p>
<p>/Users/yuelin/.npm-global/lib/node_modules/@aws-amplify/cli/bin/amplify configure</p>
]]></content>
      <categories>
        <category>Frontend</category>
      </categories>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Singly LinkedList</title>
    <url>/2021/01/04/SinglyLinkedList/</url>
    <content><![CDATA[<p>Singly LinkedList 1</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;*</span><br><span class="line">Singly LinkedList C++</span><br><span class="line">*&#x2F;</span><br><span class="line"> #include &lt;iostream&gt;</span><br><span class="line"> #include &lt;string&gt;</span><br><span class="line"> using namespace std;</span><br><span class="line"></span><br><span class="line"> typedef int ElementType;</span><br><span class="line"></span><br><span class="line"> class SLList</span><br><span class="line"> &#123;</span><br><span class="line"> public:</span><br><span class="line">     SLList();&#x2F;&#x2F;默认构造函数</span><br><span class="line">     SLList(const SLList&amp; from);&#x2F;&#x2F;复制构造函数</span><br><span class="line">     SLList&amp; operator &#x3D; (const SLList&amp; from);&#x2F;&#x2F;赋值操作符重载</span><br><span class="line">     ~SLList();&#x2F;&#x2F;析构函数</span><br><span class="line"> public:&#x2F;&#x2F;why separate</span><br><span class="line">     class SLNode</span><br><span class="line">     &#123;</span><br><span class="line">         friend class SLList;</span><br><span class="line">     private:</span><br><span class="line">         SLNode();</span><br><span class="line">         SLNode(const ElementType&amp; t);</span><br><span class="line">         ~SLNode();</span><br><span class="line">     public:</span><br><span class="line">         ElementType m_data;</span><br><span class="line">         SLNode* m_next;</span><br><span class="line">     &#125;;</span><br><span class="line"> public:&#x2F;&#x2F;成员函数</span><br><span class="line">     bool empty(void) const &#123; return m_size &#x3D;&#x3D; 0; &#125;&#x2F;&#x2F;判断链表是否为空</span><br><span class="line">     int size(void) const &#123; return m_size; &#125;&#x2F;&#x2F;返回链表元素的数量</span><br><span class="line">     const ElementType&amp; get_element(int i) const;&#x2F;&#x2F;获取链表的第i个元素(可能会抛异常)</span><br><span class="line">     ElementType&amp; get_element(int i);&#x2F;&#x2F;获取链表的第i个元素(可能会抛异常)</span><br><span class="line">     &#x2F;* 在第i个元素之前插入e(可能会抛异常)</span><br><span class="line">        拥有n个元素的链表可以插入的位置有n+1个：0, 1, ... , n</span><br><span class="line">        插入位置为n表示插入在最后一个元素之后</span><br><span class="line">     *&#x2F;</span><br><span class="line">     void insert(int i, const ElementType&amp; e);</span><br><span class="line">     &#x2F;* 查找某个元素是否存在，当发现第一个时就返回，所以返回SLNode*;</span><br><span class="line">        这个函数有3个作用:</span><br><span class="line">        1 查找元素是否存在；</span><br><span class="line">        2 读写元素；</span><br><span class="line">        3 相当于返回的是迭代器</span><br><span class="line">     *&#x2F;</span><br><span class="line">     SLNode* find(const ElementType&amp; e);</span><br><span class="line">     void delete_element(int i);&#x2F;&#x2F;删除第i个元素(可能会抛异常)</span><br><span class="line">     void clear(void);&#x2F;&#x2F;删除所有元素</span><br><span class="line"> private:</span><br><span class="line">     void copy(const SLList &amp; from);</span><br><span class="line"> private:</span><br><span class="line">     &#x2F;* 指向头节点，不存储元素；</span><br><span class="line">        next为空指针表示没有最后一个元素，也就是空链表;</span><br><span class="line">        方便代码编写</span><br><span class="line">     *&#x2F;</span><br><span class="line">     SLNode m_head;</span><br><span class="line">     int m_size;&#x2F;&#x2F;链表当前有多少个元素</span><br><span class="line"></span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"> SLList::SLNode::SLNode()</span><br><span class="line"> &#123;</span><br><span class="line">     m_next &#x3D; nullptr;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList::SLNode::SLNode(const ElementType &amp;t)</span><br><span class="line"> &#123;</span><br><span class="line">     m_data &#x3D; t;</span><br><span class="line">     m_next &#x3D; nullptr;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList::SLNode::~SLNode()</span><br><span class="line"> &#123;</span><br><span class="line">     m_next &#x3D; nullptr;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> void SLList::insert(int i, const ElementType &amp;e)</span><br><span class="line"> &#123;</span><br><span class="line">     if(i &lt; 0 || i &gt; m_size)</span><br><span class="line">     &#123;</span><br><span class="line">         throw runtime_error(&quot;Out of Index&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">     else</span><br><span class="line">     &#123;</span><br><span class="line">         SLNode *p &#x3D; &amp;m_head;</span><br><span class="line">         int length &#x3D; 0;</span><br><span class="line">         while (length &lt; i &amp;&amp; p !&#x3D; nullptr)</span><br><span class="line">         &#123;</span><br><span class="line">             length++;</span><br><span class="line">             p &#x3D; p-&gt;m_next;</span><br><span class="line">         &#125;</span><br><span class="line">         SLNode *q &#x3D; new SLNode(e);</span><br><span class="line">         q-&gt;m_next &#x3D; p-&gt;m_next;</span><br><span class="line">         p-&gt;m_next &#x3D; q;</span><br><span class="line">         m_size++;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> void SLList::delete_element(int i)</span><br><span class="line"> &#123;</span><br><span class="line">     if(i &lt; 0 || i &gt;&#x3D; m_size)</span><br><span class="line">     &#123;</span><br><span class="line">         throw runtime_error(&quot;Out of Index&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">     else</span><br><span class="line">     &#123;</span><br><span class="line">         SLNode *p &#x3D; &amp;m_head;</span><br><span class="line">         int length &#x3D; 0;</span><br><span class="line">         while (length &lt; i &amp;&amp; p !&#x3D; nullptr)</span><br><span class="line">         &#123;</span><br><span class="line">             length++;</span><br><span class="line">             p &#x3D; p-&gt;m_next;</span><br><span class="line">         &#125;</span><br><span class="line">         SLNode *q &#x3D; p-&gt;m_next;</span><br><span class="line">         p-&gt;m_next &#x3D; q-&gt;m_next;</span><br><span class="line">         delete q;</span><br><span class="line">         m_size--;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList::SLList()</span><br><span class="line"> &#123;</span><br><span class="line">     m_size &#x3D; 0;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList::~SLList()</span><br><span class="line"> &#123;</span><br><span class="line">     &#x2F;&#x2F;clear();&#x2F;&#x2F;libc++abi.dylib: terminating with uncaught exception of type std::runtime_error: Out of Index</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> void SLList::copy(const SLList &amp;from)</span><br><span class="line"> &#123;</span><br><span class="line">     auto old &#x3D; &amp;from.m_head;</span><br><span class="line">     auto current &#x3D; &amp;m_head;</span><br><span class="line">     for(int i &#x3D; 0; i &lt; from.m_size; i++)</span><br><span class="line">     &#123;</span><br><span class="line">         auto p &#x3D; new SLNode(old-&gt;m_next-&gt;m_data);</span><br><span class="line">         current-&gt;m_next &#x3D; p;</span><br><span class="line">         current &#x3D; p;</span><br><span class="line"></span><br><span class="line">         old &#x3D; old-&gt;m_next;</span><br><span class="line">     &#125;</span><br><span class="line">     m_size &#x3D; from.m_size;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> SLList::SLList(const SLList &amp;from)</span><br><span class="line"> &#123;</span><br><span class="line">     if(!from.empty())</span><br><span class="line">     &#123;</span><br><span class="line">         copy(from);</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> const ElementType &amp;SLList::get_element(int i) const</span><br><span class="line"> &#123;</span><br><span class="line">     if(i &lt; 0 || i &gt; m_size)</span><br><span class="line">     &#123;</span><br><span class="line">         throw runtime_error(&quot;Out of Index&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">     auto p &#x3D; &amp;m_head;</span><br><span class="line">     int length &#x3D; 0;</span><br><span class="line">     while(length &lt; i &amp;&amp; p !&#x3D; nullptr)</span><br><span class="line">     &#123;</span><br><span class="line">         length++;</span><br><span class="line">         p &#x3D; p-&gt;m_next;</span><br><span class="line">     &#125;</span><br><span class="line">     return p-&gt;m_next-&gt;m_data;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> ElementType &amp;SLList::get_element(int i)</span><br><span class="line"> &#123;</span><br><span class="line">     if(i &lt; 0 || i &gt; m_size)</span><br><span class="line">     &#123;</span><br><span class="line">         throw runtime_error(&quot;Out of Index&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">     auto p &#x3D; &amp;m_head;</span><br><span class="line">     int length &#x3D; 0;</span><br><span class="line">     while(length &lt; i &amp;&amp; p !&#x3D; nullptr)</span><br><span class="line">     &#123;</span><br><span class="line">         length++;</span><br><span class="line">         p &#x3D; p-&gt;m_next;</span><br><span class="line">     &#125;</span><br><span class="line">     return p-&gt;m_next-&gt;m_data;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList &amp;SLList::operator&#x3D;(const SLList &amp;from)</span><br><span class="line"> &#123;</span><br><span class="line">     std::cout &lt;&lt; &quot;SLListInt &amp; DLListInt::operator&#x3D;(const SLListInt &amp; from)\n&quot;;</span><br><span class="line">     if (this &#x3D;&#x3D; &amp;from)</span><br><span class="line">     &#123;</span><br><span class="line">         return *this;</span><br><span class="line">     &#125;</span><br><span class="line">     else</span><br><span class="line">     &#123;</span><br><span class="line">         copy(from);</span><br><span class="line">         return *this;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> SLList::SLNode *SLList::find(const ElementType &amp;e)</span><br><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">     SLNode *p &#x3D; &amp;m_head;</span><br><span class="line">     while(p)</span><br><span class="line">     &#123;</span><br><span class="line">         if(p-&gt;m_data &#x3D;&#x3D; e)</span><br><span class="line">         &#123;</span><br><span class="line">             return p;</span><br><span class="line">         &#125;</span><br><span class="line">         p &#x3D; p-&gt;m_next;</span><br><span class="line">     &#125;</span><br><span class="line">     return nullptr;</span><br><span class="line"></span><br><span class="line">     &#x2F;*</span><br><span class="line">     SLNode *p &#x3D; &amp;m_head;</span><br><span class="line">     while(p-&gt;next)</span><br><span class="line">     &#123;</span><br><span class="line">         if(p-&gt;m_next-&gt;m_data &#x3D;&#x3D; e)</span><br><span class="line">         &#123;</span><br><span class="line">             return p-&gt;m_next;</span><br><span class="line">         &#125;</span><br><span class="line">         p &#x3D; p-&gt;m_next;</span><br><span class="line">     &#125;</span><br><span class="line">     return nullptr;</span><br><span class="line">      *&#x2F;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> void SLList::clear()</span><br><span class="line"> &#123;</span><br><span class="line">     SLNode *p &#x3D; &amp;m_head;</span><br><span class="line">     while(p)</span><br><span class="line">     &#123;</span><br><span class="line">         auto q &#x3D; p-&gt;m_next;</span><br><span class="line">         p &#x3D; q-&gt;m_next;</span><br><span class="line">         delete q;</span><br><span class="line">     &#125;</span><br><span class="line">     m_head.m_next &#x3D; nullptr;</span><br><span class="line">     m_size &#x3D; 0;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> void print_list(const SLList&amp; slist, const std::string&amp; msg)</span><br><span class="line"> &#123;</span><br><span class="line">     cout &lt;&lt; &quot;print &quot; &lt;&lt; msg &lt;&lt; &quot;:&quot;;</span><br><span class="line">     for (int i &#x3D; 0; i &lt; slist.size(); ++i)</span><br><span class="line">     &#123;</span><br><span class="line">         cout &lt;&lt; slist.get_element(i) &lt;&lt; &quot; &quot;;</span><br><span class="line">     &#125;</span><br><span class="line">     cout &lt;&lt; &quot;\n&quot;;</span><br><span class="line"> &#125;</span><br><span class="line"> void Check(bool b)</span><br><span class="line"> &#123;</span><br><span class="line">     if (b)</span><br><span class="line">     &#123;</span><br><span class="line">         std::cout &lt;&lt; &quot;Pass&quot; &lt;&lt; std::endl;</span><br><span class="line">     &#125;</span><br><span class="line">     else</span><br><span class="line">     &#123;</span><br><span class="line">         std::cout &lt;&lt; &quot;NOT Pass&quot; &lt;&lt; std::endl;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> int main()</span><br><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#123;</span><br><span class="line">         &#x2F;&#x2F;test empty&#x2F;size;</span><br><span class="line">         cout &lt;&lt; &quot;test empty&#x2F;size&quot; &lt;&lt; std::endl;</span><br><span class="line">         SLList slist;</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 0);</span><br><span class="line">         Check(slist.empty());</span><br><span class="line">         slist.insert(0, 1);</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 1);</span><br><span class="line">         Check(slist.empty() &#x3D;&#x3D; false);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#123;</span><br><span class="line">         &#x2F;&#x2F;test insert&#x2F;get_element&#x2F;find;</span><br><span class="line">         std::cout &lt;&lt; &quot;test insert&#x2F;get_element&#x2F;find&quot; &lt;&lt; std::endl;</span><br><span class="line">         SLList slist;</span><br><span class="line">         cout &lt;&lt; &quot;1&quot;;</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 0);</span><br><span class="line">         cout &lt;&lt; &quot;2&quot;;</span><br><span class="line">         Check(slist.empty());</span><br><span class="line">         try</span><br><span class="line">         &#123;</span><br><span class="line">             slist.get_element(-1);</span><br><span class="line">         &#125;</span><br><span class="line">         catch (const std::exception&amp; e)</span><br><span class="line">         &#123;</span><br><span class="line">             std::cout&lt;&lt;&quot;Pass &quot; &lt;&lt; e.what() &lt;&lt; std::endl;</span><br><span class="line">         &#125;</span><br><span class="line">         cout &lt;&lt; &quot;3&quot;;</span><br><span class="line">         Check(slist.find(123) &#x3D;&#x3D; nullptr);</span><br><span class="line">         slist.insert(0, 123);</span><br><span class="line">         cout &lt;&lt; &quot;4&quot;;</span><br><span class="line">         Check(slist.find(123) &amp;&amp; slist.find(123)-&gt;m_data &#x3D;&#x3D; 123);</span><br><span class="line">         cout &lt;&lt; &quot;5&quot;;</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 1);</span><br><span class="line">         cout &lt;&lt; &quot;6&quot;;</span><br><span class="line">         Check(slist.empty() &#x3D;&#x3D; false);</span><br><span class="line">         cout &lt;&lt; &quot;7&quot;;</span><br><span class="line">         Check(slist.get_element(0) &#x3D;&#x3D; 123);</span><br><span class="line">         slist.insert(1, 456);</span><br><span class="line">         cout &lt;&lt; &quot;8&quot;;</span><br><span class="line">         Check(slist.find(456) &amp;&amp; slist.find(456)-&gt;m_data &#x3D;&#x3D; 456);</span><br><span class="line">         cout &lt;&lt; &quot;9&quot;;</span><br><span class="line">         Check(slist.get_element(0) &#x3D;&#x3D; 123);</span><br><span class="line">         cout &lt;&lt; &quot;10&quot;;</span><br><span class="line">         Check(slist.get_element(1) &#x3D;&#x3D; 456);</span><br><span class="line">         cout &lt;&lt; &quot;11&quot;;</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 2);</span><br><span class="line">         try</span><br><span class="line">         &#123;</span><br><span class="line">             slist.get_element(2);</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         catch (const std::exception&amp; e)</span><br><span class="line">         &#123;</span><br><span class="line">             std::cout &lt;&lt; &quot;Pass &quot; &lt;&lt; e.what() &lt;&lt; std::endl;</span><br><span class="line">         &#125;</span><br><span class="line">         slist.get_element(1) &#x3D; 789;</span><br><span class="line">         cout &lt;&lt; &quot;12&quot;;</span><br><span class="line">         Check(slist.get_element(1) &#x3D;&#x3D; 789);</span><br><span class="line">         cout &lt;&lt; &quot;13&quot;;</span><br><span class="line">         Check(slist.find(789) &amp;&amp; slist.find(789)-&gt;m_data &#x3D;&#x3D; 789);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#123;</span><br><span class="line">         &#x2F;&#x2F;test delete_element;</span><br><span class="line">         std::cout &lt;&lt; &quot;test delete_element&quot; &lt;&lt; std::endl;</span><br><span class="line">         SLList slist;</span><br><span class="line">         try</span><br><span class="line">         &#123;</span><br><span class="line">             slist.delete_element(0);</span><br><span class="line">         &#125;</span><br><span class="line">         catch (const std::exception&amp; e)</span><br><span class="line">         &#123;</span><br><span class="line">             std::cout &lt;&lt; &quot;Pass &quot; &lt;&lt; e.what() &lt;&lt; std::endl;</span><br><span class="line">         &#125;</span><br><span class="line">         slist.insert(0, 123);</span><br><span class="line">         cout &lt;&lt; &quot;1&quot;;</span><br><span class="line">         Check(slist.find(123) &amp;&amp; slist.find(123)-&gt;m_data &#x3D;&#x3D; 123);</span><br><span class="line"></span><br><span class="line">         slist.delete_element(0);</span><br><span class="line">         cout &lt;&lt; &quot;2&quot;;</span><br><span class="line">         Check(slist.size() &#x3D;&#x3D; 0);</span><br><span class="line">         cout &lt;&lt; &quot;3&quot;;</span><br><span class="line">         Check(slist.empty());</span><br><span class="line"></span><br><span class="line">         slist.insert(0, 123);</span><br><span class="line">         slist.insert(1, 456);</span><br><span class="line">         slist.insert(2, 789);</span><br><span class="line">         slist.insert(3, 101112);</span><br><span class="line">         slist.insert(4, 131415);</span><br><span class="line">         print_list(slist, &quot;5个整数&quot;);</span><br><span class="line">         slist.delete_element(slist.size() - 1);</span><br><span class="line">         print_list(slist, &quot;删除最后一个，剩4个整数&quot;);</span><br><span class="line"></span><br><span class="line">         slist.delete_element(0);</span><br><span class="line">         print_list(slist, &quot;删除第1个，剩3个整数&quot;);</span><br><span class="line">         slist.delete_element(1);</span><br><span class="line">         print_list(slist, &quot;删除第2个，剩2个整数&quot;);</span><br><span class="line">         slist.delete_element(0);</span><br><span class="line">         slist.delete_element(0);</span><br><span class="line">         print_list(slist, &quot;全部删除后&quot;);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#123;</span><br><span class="line">         &#x2F;&#x2F;test clear;</span><br><span class="line">         std::cout &lt;&lt; &quot;test clear&quot; &lt;&lt; std::endl;</span><br><span class="line">         SLList slist;</span><br><span class="line">         slist.insert(0, 123);</span><br><span class="line">         slist.insert(1, 456);</span><br><span class="line">         slist.insert(2, 789);</span><br><span class="line">         slist.insert(3, 101112);</span><br><span class="line">         slist.insert(4, 131415);</span><br><span class="line">         print_list(slist, &quot;5个整数&quot;);</span><br><span class="line">         slist.clear();</span><br><span class="line">         print_list(slist, &quot;全部删除后&quot;);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#123;</span><br><span class="line">         &#x2F;&#x2F;test copy;</span><br><span class="line">         std::cout &lt;&lt; &quot;test copy&quot; &lt;&lt; std::endl;</span><br><span class="line">         SLList slist;</span><br><span class="line">         slist.insert(0, 123);</span><br><span class="line">         slist.insert(1, 456);</span><br><span class="line">         slist.insert(2, 789);</span><br><span class="line">         slist.insert(3, 101112);</span><br><span class="line">         slist.insert(4, 131415);</span><br><span class="line">         print_list(slist, &quot;slist 5个整数&quot;);</span><br><span class="line">         &#123;</span><br><span class="line">             SLList slist2(slist);</span><br><span class="line">             print_list(slist2, &quot;slist2 5个整数&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">         &#123;</span><br><span class="line">             SLList slist3;</span><br><span class="line">             slist3 &#x3D; slist;</span><br><span class="line">             print_list(slist3, &quot;slist3 5个整数&quot;);</span><br><span class="line">         &#125;</span><br><span class="line">         slist.clear();</span><br><span class="line">         print_list(slist, &quot;全部删除后&quot;);</span><br><span class="line">     &#125;</span><br><span class="line">      </span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Data Structure and Algorithms</category>
      </categories>
      <tags>
        <tag>LinkedList</tag>
      </tags>
  </entry>
  <entry>
    <title>CSE 110 - 1</title>
    <url>/2021/01/09/CSE110-Assignment1/</url>
    <content><![CDATA[<h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a><font size=5 color="#fc0303">Overview</font></h2><p>In this project we will write a program that will “fire” a cannonball at a mid-air target and determine if the cannonball hits the target or not. Five variables needed for this calculation will be provided by the user. Our program will do minor input validation on this input and will output the outcome of your calculations. See the diagram below for an example of what we are calculating.</p>
<a id="more"></a> 
<p><img src="/images/CSE110A1.jpg"></p>
<h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a><font size=5 color="#fc0303">Requirements</font></h2><p>Our program must do the following:</p>
<ol>
<li><p>Ask the user to provide the following values which you will store as a double, one at a time, with a proper message for each (ie. “Please type in the height”).</p>
<p> a. Velocity - The speed (in feet per second) at which the cannonball is fired.<br> b. Angle - The angle (in degrees) above the ground at which the cannonball is fired (this is called the inclination angle in the above diagram).<br> c. Distance - This is the horizontal distance (in feet) to the target (RH in the above diagram)<br> d. Elevation - The height (in feet) of the bottom of the target from the ground (y value on an x-y plane).<br> e. Size - This is how tall the target is from its bottom (elevation) to its top (elevation + size).</p>
</li>
<li><p>Validate the user’s input. One of the calculations you need to do requires division and we must ensure that the denominator of the equation is not 0.</p>
<p> a. Calculate (velocity * the cosine of angle in radians).<br> i. Use the Math class for cosine and converting to radians.<br> b. If that value if 0, print a message that the distance cannot be calculated with that input and do not continue. Otherwise, have the program continue to the next step.<br> i. That is, the rest of the program should be in an else block.</p>
</li>
<li><p>Calculate the time it takes the object to reach the distance.</p>
<p> a. The formula is (distance / (velocity * the cosine of angle in radians).</p>
</li>
<li><p>Calculate the height of the projectile at that distance.<br> a. The formula is (velocity * time * the sine of the angle in radians - ((32.17 * time squared) / 2))</p>
<pre><code> i. Again, use the math class for the sine and squaring time.
 ii. If you’re having trouble with this formula, try breaking it into smaller
 parts.</code></pre>
</li>
<li><p>Print the outcome of this cannonball shot.<br> a. There are four possible outcomes and you should print a proper message for each one.</p>
<pre><code> i. Height is less than 0: This means that the cannonball did not even reach the target.
 ii. Height is greater than 0 but less than the elevation of the target: This means the cannonball went under the target.
     (1) Print the height of the cannonball as part of your message.
 iii. Height is greater than elevation and less than elevation plus size: This means the cannonball hit the target!
 iv. Height is greater than elevation plus size: The cannonball went over the top of the target.
     (1) Print the height of the cannonball as part of your message.
     v. Note: I worded the above conditions similar to how you you might consider setting up your if, else-if, and else statements, but there are other, better, ways to organize this. Give it some thought.</code></pre>
</li>
</ol>
<h2 id="Example-Inputs"><a href="#Example-Inputs" class="headerlink" title="Example Inputs"></a><font size=5 color="#fc0303">Example Inputs</font></h2><p>Below are five example runs of the program with the inputs and outputs. Remember, the graders will be testing your program against these as well as their own, so make sure you test these and come up with your own before submitting your program.</p>
<p><font size=5>#1</font><br><font size=4>Please enter the velocity of the cannonball.</font><br><font size=3 color="#0048ff">5</font><br><font size=4>Please enter the angle the cannonball will be shot at.</font><br><font size=3 color="#0048ff">45</font><br><font size=4>Please enter the elevation of the bottom of the target.</font><br><font size=3 color="#0048ff">10</font><br><font size=4>Please enter the size of the target.</font><br><font size=3 color="#0048ff">7</font><br><font size=4>The cannonball did not make it to the target.</font></p>
<p><font size=5>#2</font><br><font size=4>Please enter the velocity of the cannonball.</font><br><font size=3 color="#0048ff">500</font><br><font size=4>Please enter the angle the cannonball will be shot at.</font><br><font size=3 color="#0048ff">20</font><br><font size=4>Please enter the distance to the target.</font><br><font size=3 color="#0048ff">12</font><br><font size=4>Please enter the elevation of the bottom of the target.</font><br><font size=3 color="#0048ff">3</font><br><font size=4>Please enter the size of the target.</font><br><font size=3 color="#0048ff">1</font><br><font size=4>The cannonball went over the target. Height at the target was 4.357150481812686</font></p>
<p><font size=5>#3</font><br><font size=4>Please enter the velocity of the cannonball.</font><br><font size=3 color="#0048ff">0</font><br><font size=4>Please enter the angle the cannonball will be shot at.</font><br><font size=3 color="#0048ff">50</font><br><font size=4>Please enter the distance to the target.</font><br><font size=3 color="#0048ff">29</font><br><font size=4>Please enter the elevation of the bottom of the target.</font><br><font size=3 color="#0048ff">46</font><br><font size=4>Please enter the size of the target.</font><br><font size=3 color="#0048ff">19</font><br><font size=4>The distance cannot be calculated with this input.</font></p>
<p><font size=5>#4</font><br><font size=4>Please enter the velocity of the cannonball.</font><br><font size=3 color="#0048ff">500</font><br><font size=4>Please enter the angle the cannonball will be shot at.</font><br><font size=3 color="#0048ff">45</font><br><font size=4>Please enter the distance to the target.</font><br><font size=3 color="#0048ff">5</font><br><font size=4>Please enter the elevation of the bottom of the target.</font><br><font size=3 color="#0048ff">2</font><br><font size=4>Please enter the size of the target.</font><br><font size=3 color="#0048ff">50</font><br><font size=4>The cannonball hit the target!.</font></p>
<p><font size=5>#5</font><br><font size=4>Please enter the velocity of the cannonball.</font><br><font size=3 color="#0048ff">100</font><br><font size=4>Please enter the angle the cannonball will be shot at.</font><br><font size=3 color="#0048ff">10</font><br><font size=4>Please enter the distance to the target.</font><br><font size=3 color="#0048ff">20</font><br><font size=4>Please enter the elevation of the bottom of the target.</font><br><font size=3 color="#0048ff">50</font><br><font size=4>Please enter the size of the target.</font><br><font size=3 color="#0048ff">1</font><br><font size=4>The cannonball went under the target. Height at the target was 2.8631355334347828</font></p>
<h2 id="Sample-Code"><a href="#Sample-Code" class="headerlink" title="Sample Code"></a>Sample Code</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import java.util.Scanner;</span><br><span class="line">public class Assignment1</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[]args)</span><br><span class="line">    &#123;</span><br><span class="line">        Scanner scan = new Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the velocity of the cannonball&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        double velocity =scan.nextDouble();</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the angle the cannonball will be shot at&quot;</span>);</span><br><span class="line">        double angle = scan.nextDouble();</span><br><span class="line">        double radians = Math.toRadians(angle);</span><br><span class="line">        double radcos = Math.cos(radians);</span><br><span class="line">        double radsin = Math.sin(radians);</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the distance to the target&quot;</span>);</span><br><span class="line">        double distance = scan.nextDouble();</span><br><span class="line">        double time1 = (velocity * radcos);</span><br><span class="line">        double time2 = (distance/(velocity*radcos));</span><br><span class="line">        </span><br><span class="line">        double TimeSquare = Math.pow(time2, 2);</span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the elevation of the bottom of the target&quot;</span>);</span><br><span class="line">        double elevation = scan.nextDouble();</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;Please enter the size of the target&quot;</span>);</span><br><span class="line">        double size = scan.nextDouble();</span><br><span class="line">        double height =((velocity*time2*radsin)-(32.17*time2*time2)/2);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (time1 == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;The distance cannot be caculated with that input&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (height &lt; 0 )</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;the cannonball did not even reach the target&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (height &gt; 0 &amp;&amp; height &lt; elevation) </span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;the cannonball went under the target&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;the height is&quot;</span> + height);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (height &gt; elevation &amp;&amp; height &lt; (elevation + size))</span><br><span class="line">        &#123; </span><br><span class="line">            System.out.println(<span class="string">&quot; the cannonball hit the target!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (height&gt;(elevation + size))</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println( <span class="string">&quot;The cannonball went over the top of the target.Height is&quot;</span> + height );</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Principles of Programming</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q33 Search in Rotated Sorted Array</title>
    <url>/2021/01/09/LeetCode-Q33-Search-in-Rotated-Sorted-Array/</url>
    <content><![CDATA[<p>算法基于一个事实，数组从任意位置劈开后，至少有一半是有序的</p>
<p>比如 [ 4 5 6 7 1 2 3] ，从 7 劈开，左边是 [ 4 5 6 7] 右边是 [ 7 1 2 3]，左边是有序的。</p>
<p>我们可以先找到哪一段是有序的 (只要判断端点即可)，然后看 target 在不在这一段里，如果在，那么就把另一半丢弃。如果不在，那么就把这一段丢弃。</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public int search(int[] nums, int target) &#123;</span><br><span class="line">        int start = 0;</span><br><span class="line">        int end = nums.length - 1;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end) &#123;</span><br><span class="line">            int mid = (start + end) / 2;</span><br><span class="line">            <span class="keyword">if</span> (target == nums[mid]) &#123;</span><br><span class="line">                <span class="built_in">return</span> mid;</span><br><span class="line">            &#125;</span><br><span class="line">            //左半段是有序的</span><br><span class="line">            <span class="keyword">if</span> (nums[start] &lt;= nums[mid]) &#123;</span><br><span class="line">                //target 在这段里</span><br><span class="line">                <span class="keyword">if</span> (target &gt;= nums[start] &amp;&amp; target &lt; nums[mid]) &#123;</span><br><span class="line">                    end = mid - 1;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    start = mid + 1;</span><br><span class="line">                &#125;</span><br><span class="line">            //右半段是有序的</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (target &gt; nums[mid] &amp;&amp; target &lt;= nums[end]) &#123;</span><br><span class="line">                    start = mid + 1;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    end = mid - 1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> -1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Binary Search</tag>
      </tags>
  </entry>
  <entry>
    <title>Info Assurance &amp; Security Lecture 1</title>
    <url>/2021/01/11/CSE543-Lecture1/</url>
    <content><![CDATA[<p>In this class, we cover comprehensive knowledge. Information assurance is not only cyber security, it also comtains management, operation. Information quality is also part of info assurance.</p>
<a id="more"></a>

<p>Compute science &amp; Computer engineering difference</p>
<ol>
<li>science is discovery of knowledge, including how to do things : integrate circuit</li>
<li>computer engineering is very broad, but based on network, embedded. CS cover software, algorithm, computation, data.</li>
</ol>
<p><strong>Interms of content, this two are close.</strong></p>
]]></content>
      <categories>
        <category>Info Assurance &amp; Security</category>
      </categories>
      <tags>
        <tag>CSE543</tag>
      </tags>
  </entry>
  <entry>
    <title>Software Analysis and Design Lecture 1</title>
    <url>/2021/01/11/Software-Analysis-and-Design-Lecture-1/</url>
    <content><![CDATA[<h3 id="Course-Description"><a href="#Course-Description" class="headerlink" title="Course Description:"></a>Course Description:</h3><p>This course introduces requirements analysis and design, software architecture and software patterns, representations of software, formal methods, and component-based development.</p>
<a id="more"></a>

<p>Synchronous learning means <strong>live lectures</strong> with in-person instruction. Online course are recorded videos.</p>
<h3 id="Main-Topic"><a href="#Main-Topic" class="headerlink" title="Main Topic"></a>Main Topic</h3><ol>
<li>Requirements</li>
<li>Modeling or Design</li>
<li>Programming</li>
</ol>
]]></content>
      <categories>
        <category>Software Analysis and Design</category>
      </categories>
      <tags>
        <tag>CSE460</tag>
      </tags>
  </entry>
  <entry>
    <title>Java basic 1</title>
    <url>/2021/01/11/Java-basic-1/</url>
    <content><![CDATA[<h3 id="Array-copy"><a href="#Array-copy" class="headerlink" title="Array copy"></a>Array copy</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">int[] array1, array2;</span><br><span class="line">array1 = new int[] &#123;2,3,5,7,8,9,12,11,10&#125;;</span><br><span class="line"></span><br><span class="line">//copy array1 to array2</span><br><span class="line">array2 = new int[array1.length];</span><br><span class="line"><span class="keyword">for</span>(int i = 0; i &lt; array2.length; i++)</span><br><span class="line">&#123;</span><br><span class="line">    array2[i] = array1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们通过new的方式，给array2在heap空间中开辟了新的数组空间，将array1数组的元素值一个个的copy进array2里</p>
<h3 id="Swap-array"><a href="#Swap-array" class="headerlink" title="Swap array"></a>Swap array</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(int i = 0; i &lt; arr.length / 2; i++)</span><br><span class="line">&#123;</span><br><span class="line">    String temp = arr[i];</span><br><span class="line">    arr[i] = arr[arr.length - i - 1];</span><br><span class="line">    arr[arr.length - i - 1] = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h3 id="Search-elements-in-an-array"><a href="#Search-elements-in-an-array" class="headerlink" title="Search elements in an array"></a>Search elements in an array</h3><ol>
<li>linear search: 通过遍历的方式，一个一个的对比查找，具有普遍适用性</li>
<li>binary search:<br> 每次比较中间值，&lt; nums[mid] 找左边。数组必须有序</li>
</ol>
<h3 id="Sorting-algorithms"><a href="#Sorting-algorithms" class="headerlink" title="Sorting algorithms"></a>Sorting algorithms</h3><ol>
<li>Selection sort <strong>O(n^2)</strong></li>
<li>Bubble sort <strong>O(n^2)</strong></li>
<li>Quick sort <strong>O(nlogn)</strong></li>
<li>Insertion sort <strong>O(n^2)</strong></li>
<li>Merge sort <strong>O(nlogn)</strong></li>
<li>Heap sort <strong>O(nlogn)</strong></li>
</ol>
<p>Time complexity, space compelxity are two of the most important keys</p>
<p>外部排序需要借助disk</p>
<h3 id="Bubble-sort"><a href="#Bubble-sort" class="headerlink" title="Bubble sort"></a>Bubble sort</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(int i = 0; i &lt; arr.length - 1; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(int j = 0; j &lt; arr.length - 1 - i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[j] &gt; arr[j + 1])</span><br><span class="line">        &#123;</span><br><span class="line">            int temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + 1];</span><br><span class="line">            arr[j + 1] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><ol>
<li>using java util package</li>
<li>Arrays: 提供了 很多操作数组的方法</li>
</ol>
<h3 id="Procedure-oriented-amp-Objected-oriented"><a href="#Procedure-oriented-amp-Objected-oriented" class="headerlink" title="Procedure-oriented &amp; Objected-oriented"></a>Procedure-oriented &amp; Objected-oriented</h3><p>Procedure-oriented: 强调功能行为，以函数为最小单位，考虑怎么做</p>
<ol>
<li>把冰箱门打开</li>
<li>抬起大象，塞进冰箱</li>
<li>关冰箱门</li>
</ol>
<p>Objected-oriented:<br>具备了功能的对象，以class/object为单位，考虑谁来做</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">person</span><br><span class="line">&#123;</span><br><span class="line">     new fridge()</span><br><span class="line">     &#123;</span><br><span class="line">        fridge.open()</span><br><span class="line">     &#123;</span><br><span class="line">     </span><br><span class="line">     new elephant()</span><br><span class="line">     &#123;</span><br><span class="line">        elephant.enter();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fridge</span><br><span class="line">&#123;</span><br><span class="line">    open();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">elephant</span><br><span class="line">&#123;</span><br><span class="line">    enter();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>OOP可以在现有的基础之上直接改class，但是POP要深入到程序里改。大项目里OOP优势明显。</p>
<h3 id="OOP-three-features"><a href="#OOP-three-features" class="headerlink" title="OOP three features"></a>OOP three features</h3><ol>
<li>Encapsulation</li>
<li>Inheritance</li>
<li>Polymorphism</li>
</ol>
<h3 id="OOP-concepts"><a href="#OOP-concepts" class="headerlink" title="OOP concepts"></a>OOP concepts</h3><p>Class and Object is the Key concept of OOP</p>
<p>Class: 抽象的，概念上的定义<br>Object: 实际存在的个体，so called instance<br>面向对象的程序设计的重点是object的设计，<br>设计object, 就是设计Object的成员</p>
<h3 id="OOP-program"><a href="#OOP-program" class="headerlink" title="OOP program"></a>OOP program</h3><ol>
<li><p>创建class，设计class的成员</p>
</li>
<li><p>创建class的object</p>
</li>
<li><p>Call object.filed OR object.methods 调用Object的结构</p>
</li>
<li><p>如果创建了一个class的多个object，每个object都有独立的一个class field（non- static) 如果我们修改一个对象的field a，不影响另外一个object的field. 除非我们让两个object指向heap里的同一个区域, 那么更改其中一个，另一个也会改变。</p>
</li>
<li><p>Heap 存放 Object instantiation<br> Stack 存放 Local variable</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">public class PersonTest</span><br><span class="line">&#123;</span><br><span class="line">    public static void main(String[] args)</span><br><span class="line">    &#123;</span><br><span class="line">        //创建person类的对象 = 类的实例化</span><br><span class="line">        //每new一个object，heap里就多一个空间</span><br><span class="line">        Person p1 = new Person();</span><br><span class="line">        </span><br><span class="line">        //call object: object.field</span><br><span class="line">        p1.name = <span class="string">&quot;Tom&quot;</span>;</span><br><span class="line">        p1.isMale = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        //call methods: object.method</span><br><span class="line">        p1.eat();</span><br><span class="line">        p1.sleep();</span><br><span class="line">        p1.talk(<span class="string">&quot;English&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        //**********************************</span><br><span class="line">        Person p2 = new Person();</span><br><span class="line">        System.out.println(p2.name); //null</span><br><span class="line">        System.out.println(p2.isMale); //<span class="literal">false</span> </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        //**********************************</span><br><span class="line">        //将P1变量保存的obejct address给p3，导致p1和p3指向了heap里的同一个block</span><br><span class="line">        Person p3 = p1;</span><br><span class="line">        System.out.println(p3.name); //Tom</span><br><span class="line">        </span><br><span class="line">        p3.age = 10;</span><br><span class="line">        System.out.println(p1.age); //10 </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Person</span><br><span class="line">&#123;</span><br><span class="line">    //属性 -&gt; field</span><br><span class="line">    String name;</span><br><span class="line">    int age = 1; //可以赋值也可以不赋值</span><br><span class="line">    boolean isMale;//default is <span class="literal">false</span></span><br><span class="line">    </span><br><span class="line">    //方法 -&gt; method</span><br><span class="line">    public void eat()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;People eat&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void sleep()</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;People sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void talk(String language)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;People talk,</span></span><br><span class="line"><span class="string">        by speaking &quot;</span> + language);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="Object-memory-analysis"><a href="#Object-memory-analysis" class="headerlink" title="Object memory analysis"></a>Object memory analysis</h3><p>Person p1 = new Person();  <strong>new memory in heap</strong><br>p1.name = “Tom”;<br><strong>The variable in methods are all local variable</strong><br>p1.isMale = true; </p>
<p>Person p2 = new Person();<br>System.out.println(p2.name);<br>Person p3 = p1;<br>p3.age = 10;</p>
<p><strong><em>stack</em></strong> p1 0x12b<br>                        –&gt; p2 0x778<br>                   p3 0x12b     </p>
<p><strong><em>heap</em></strong><br>name: null -&gt; “Tom”<br>                 age: 1<br>                 isMale: false -&gt; “true”<br>    –&gt;P2 name: null<br>            age: 1<br>            isMale: false</p>
<h3 id="Call-Field-in-Object"><a href="#Call-Field-in-Object" class="headerlink" title="Call Field in Object"></a>Call Field in Object</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">// member variable VS <span class="built_in">local</span> variable</span><br><span class="line">1.相同点：</span><br><span class="line">    1.1 定义variable的格式，data <span class="built_in">type</span>， variable name</span><br><span class="line">    1.2 先声明，后使用</span><br><span class="line">    1.3 都有scope</span><br><span class="line"></span><br><span class="line">2.不同点：</span><br><span class="line">    2.1 在class中intialize的位置不同</span><br><span class="line">    field: 直接定义在class的一对&#123;&#125;里</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">local</span> variable: 在method内，method arguments， constructor arguments, variable inside constructor 都是<span class="built_in">local</span> variable出现的位置</span><br><span class="line">    </span><br><span class="line">    2.2 Access modifiers</span><br><span class="line">    member variable 可以在声明时，指明权限</span><br><span class="line">    常用的access modifiers</span><br><span class="line">    private, public, protected, default</span><br><span class="line">    </span><br><span class="line">    2.3 Default values</span><br><span class="line">    (byte, short, int, long): 0</span><br><span class="line">    (<span class="built_in">float</span>, double) 0.0</span><br><span class="line">    (char) 0 (or <span class="string">&#x27;\u0000&#x27;</span>)</span><br><span class="line">    (boolean), <span class="literal">false</span></span><br><span class="line">    reference data <span class="built_in">type</span>: null</span><br><span class="line"></span><br><span class="line">class User</span><br><span class="line">&#123;</span><br><span class="line">    // 2.1 field OR member variable OR instance variable</span><br><span class="line">    </span><br><span class="line">    String name;</span><br><span class="line">    int age;</span><br><span class="line">    bool isMale;</span><br><span class="line">    </span><br><span class="line">    // language is an arguments</span><br><span class="line">    //所以是<span class="built_in">local</span> variable</span><br><span class="line">    public void talk(String language)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;We use &quot;</span> + language);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void eat()</span><br><span class="line">    &#123;</span><br><span class="line">        //定义在method内的variable，是<span class="built_in">local</span> variable</span><br><span class="line">        //不能加public 或者 private</span><br><span class="line">        //因为是<span class="built_in">local</span> variable，方法是public，里面的<span class="built_in">local</span> variable就也是public了</span><br><span class="line">        String food = <span class="string">&quot;taco&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;We like &quot;</span> + food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Access-modifiers"><a href="#Access-modifiers" class="headerlink" title="Access modifiers"></a>Access modifiers</h3><p>member variable 可以在声明时，指明权限<br>常用的access modifiers<br>private, public, protected, default<br>*(Encapsulation)*</p>
<p>Local variable cannot use access modifier</p>
<h3 id="Find-index-of-min-and-max-value-in-an-array"><a href="#Find-index-of-min-and-max-value-in-an-array" class="headerlink" title="Find  index of min and max value in an array"></a>Find  index of min and max value in an array</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Scanner scan = new Scanner(System.in);</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">         Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">         <span class="keyword">int</span>[] array = &#123;<span class="number">4</span>,<span class="number">2</span>,-<span class="number">7</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">1</span>,-<span class="number">7</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> min_index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array.length; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(array[min_index] &gt; array[j])</span><br><span class="line">            &#123;</span><br><span class="line">               min_index = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(array[min_index] == array[i])</span><br><span class="line">            &#123;</span><br><span class="line">                min_index = i;</span><br><span class="line">                System.out.println(min_index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">       System.out.println(array[min_index]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Selection-sort"><a href="#Selection-sort" class="headerlink" title="Selection sort"></a>Selection sort</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">3</span>&#125;;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++)</span><br><span class="line">       &#123;</span><br><span class="line">            <span class="keyword">int</span> min = arr[i];</span><br><span class="line">            <span class="keyword">int</span> index = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j] &lt; min)</span><br><span class="line">                &#123;</span><br><span class="line">                    min = arr[j];</span><br><span class="line">                    index = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(index != i)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                arr[i] = arr[index];</span><br><span class="line">                arr[index] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           System.out.print(arr[i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>



<h3 id="Two-D-array"><a href="#Two-D-array" class="headerlink" title="Two-D array"></a>Two-D array</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">       1</span></span><br><span class="line"><span class="comment">       2,2</span></span><br><span class="line"><span class="comment">       3,3,3</span></span><br><span class="line"><span class="comment">       4,4,4,4</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">       <span class="keyword">int</span> num = scan.nextInt();</span><br><span class="line">       <span class="keyword">int</span>[][] arr;</span><br><span class="line">       arr = <span class="keyword">new</span> <span class="keyword">int</span>[num][];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           arr[i] = <span class="keyword">new</span> <span class="keyword">int</span>[i + <span class="number">1</span>];</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr[i].length; j++)</span><br><span class="line">           &#123;</span><br><span class="line">               arr[i][j] = i + <span class="number">1</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr[i].length; j++)</span><br><span class="line">           &#123;</span><br><span class="line">               System.out.print(arr[i][j]);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Income-and-outcome-management"><a href="#Income-and-outcome-management" class="headerlink" title="Income and outcome management"></a>Income and outcome management</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Scanner scan = new Scanner(System.in);</span></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">      <span class="keyword">int</span> choice;</span><br><span class="line">      <span class="keyword">double</span> deposite = <span class="number">10000</span>;</span><br><span class="line">      String details = <span class="string">&quot;Income\tbalance\tAmount\tInfo\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="keyword">do</span> &#123;</span><br><span class="line">          System.out.println(<span class="string">&quot;\t\t1. Income and outcome&quot;</span>);</span><br><span class="line">          System.out.println(<span class="string">&quot;\t\t2. Register income&quot;</span>);</span><br><span class="line">          System.out.println(<span class="string">&quot;\t\t3. Register outcome&quot;</span>);</span><br><span class="line">          System.out.println(<span class="string">&quot;\t\t4. Quit&quot;</span>);</span><br><span class="line">          choice = scan.nextInt();;</span><br><span class="line">          <span class="keyword">switch</span> (choice)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                  System.out.println(<span class="string">&quot;You have $ &quot;</span> + deposite);</span><br><span class="line">                  System.out.println(details);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                  System.out.println(<span class="string">&quot;Please enter your earned&quot;</span>);</span><br><span class="line">                  <span class="keyword">double</span> money = scan.nextDouble();</span><br><span class="line">                  System.out.println(<span class="string">&quot;Please where the money from&quot;</span>);</span><br><span class="line">                  String info = scan.next();</span><br><span class="line">                  deposite += money;</span><br><span class="line">                  details += <span class="string">&quot;Earned\t&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + deposite</span><br><span class="line">                          + info + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                  System.out.println(<span class="string">&quot;Please Register outcome&quot;</span>);</span><br><span class="line">                  money = scan.nextDouble();</span><br><span class="line">                  System.out.println(<span class="string">&quot;Please where the money goes&quot;</span>);</span><br><span class="line">                  info = scan.next();</span><br><span class="line">                  deposite -= money;</span><br><span class="line">                  details += <span class="string">&quot;Spent\t&quot;</span> + money + <span class="string">&quot;\t&quot;</span> + deposite</span><br><span class="line">                          + info + <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                  System.out.println(<span class="string">&quot;Sure to quit ? Y/N&quot;</span>);</span><br><span class="line">                  <span class="keyword">char</span> select = scan.next().charAt(<span class="number">0</span>);</span><br><span class="line">                  <span class="keyword">if</span>(select == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">                  &#123;</span><br><span class="line">                      choice = -<span class="number">1</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">else</span></span><br><span class="line">                  &#123;</span><br><span class="line">                      <span class="keyword">break</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;<span class="keyword">while</span>(choice != -<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java Basic</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Software Analysis and Design Lecture 2</title>
    <url>/2021/01/11/CSE460-Lecture2/</url>
    <content><![CDATA[<h3 id="Blueprint"><a href="#Blueprint" class="headerlink" title="Blueprint"></a>Blueprint</h3><p>A graphic description to create a <strong>specification</strong></p>
<p><strong>Models</strong><br>give us the opportunity to fail</p>
<h3 id="Complexity"><a href="#Complexity" class="headerlink" title="Complexity"></a>Complexity</h3><ol>
<li>Size: The number of components<br>tree: 3 lines of code, but more complexity<br>bubble sort: 10 lines of code</li>
<li>Abstraction<br>what is behind code? Eg: tree has less code but harder</li>
</ol>
<a id="more"></a>

<h3 id="Problem-with-complexity"><a href="#Problem-with-complexity" class="headerlink" title="Problem with complexity"></a>Problem with complexity</h3><ol>
<li><p>the more <strong>complex</strong> the system, the more open it is to total <strong>breakdown</strong>.</p>
<pre><code> breakdown because of lack of -&gt; skill
                                                   -&gt; communication</code></pre>
</li>
<li><p>software crisis: <strong>late</strong>, over <strong>budget</strong>, deficient satisfying requirements</p>
</li>
</ol>
<h3 id="Ignore-Complexity-When…"><a href="#Ignore-Complexity-When…" class="headerlink" title="Ignore Complexity When…"></a>Ignore Complexity When…</h3><ul>
<li><p>Specified, constructed, maintained, and used by 1 person</p>
</li>
<li><p>Prototype, 1 person, limited purpose and short life span</p>
</li>
<li><p>Replace them with a new software, not reuse, modify, or extend softwar </p>
</li>
</ul>
<h3 id="chanllenges"><a href="#chanllenges" class="headerlink" title="chanllenges"></a>chanllenges</h3><ul>
<li><strong>Communication gap</strong> between the users and developers</li>
<li><strong>Trade-ofs</strong>: competing, contradictory, requirements in the problem domain </li>
<li><strong>Quality</strong>: usability, reliability, performance, cost</li>
<li>Limied testing</li>
<li>Labor-intensive vs Product lines</li>
</ul>
<p>Be a teammate or leader, one of the main responsibility<br>Management: keep the issusion of <strong>Simplicity</strong></p>
<p>maximum number of <strong>chunks of information</strong>. 7 +- 2 things you can think in your brain at the same time</p>
<h3 id="INVEST"><a href="#INVEST" class="headerlink" title="INVEST"></a>INVEST</h3><p><em>Independent</em> - loosely coupled with one another<br><em>Negotiable</em> - stories are what and why, not how<br><em>Value</em> - for the customer<br><em>Estimate</em> - effort.cost of design, build, test<br><em>Small</em> (size appropriately) 1 programmer and 1 week<br><em>Testable</em> - pass or fail</p>
<p>“I want a pacman videogame” is <strong>Not</strong> a requirement</p>
<h3 id="Modeling-the-problem"><a href="#Modeling-the-problem" class="headerlink" title="Modeling the problem"></a>Modeling the problem</h3><ul>
<li>Primitive components</li>
<li>separation of concerns</li>
<li>common patterns(relationships)</li>
<li>hierarchic structure</li>
<li>Incremental devlopment</li>
</ul>
<p><strong>Functional Requirement</strong></p>
<ol>
<li>Draw pacman   </li>
<li>Move pacman   </li>
</ol>
<p>Quality &amp; Constraint is <strong>Non Functional Requirement</strong></p>
<ol>
<li>Use java to develop game</li>
<li><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Pacman</span><br><span class="line">&#123;</span><br><span class="line">    void paintComponent(graphic)</span><br><span class="line">    &#123;</span><br><span class="line">        g.drawOval(x,y,10)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">set</span> x();</span><br><span class="line">    <span class="built_in">set</span> y();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class ____</span><br><span class="line">    m() ____x y</span><br><span class="line">&#123;    &#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>Q: How many requirements approximately in pacman video games<br>A: 25 - 50 requirements<br>If less than 25, may be some lines need to be split. If combine two tasks, means we need 2 people to do, but 1 requirement only need 1 person.</p>
]]></content>
      <categories>
        <category>Software Analysis and Design</category>
      </categories>
      <tags>
        <tag>CSE460</tag>
      </tags>
  </entry>
  <entry>
    <title>Info Assurance &amp; Security Lecture 2</title>
    <url>/2021/01/13/CSE543-Lecture2/</url>
    <content><![CDATA[<h3 id="Project-Guidelines"><a href="#Project-Guidelines" class="headerlink" title="Project Guidelines"></a>Project Guidelines</h3><ol>
<li><p>Project title [8-20 words]<br>(indicate what’s in the paper)</p>
</li>
<li><p>one week to read papers, one week to finialize </p>
</li>
<li><p>No more than 10% internet paper, they were not been peer reviewed</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Info Assurance &amp; Security</category>
      </categories>
      <tags>
        <tag>CSE543</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q34 Find First and Last Position of Element in Sorted Array</title>
    <url>/2021/01/14/LeetCode-Q34-Find-First-and-Last-Position-of-Element-in-Sorted-Array/</url>
    <content><![CDATA[<p>Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.</p>
<p>If target is not found in the array, return [-1, -1].</p>
<p>Example 1:</p>
<p>Input: nums = [5,7,7,8,8,10], target = 8<br>Output: [3,4]<br>Example 2:</p>
<p>Input: nums = [5,7,7,8,8,10], target = 6<br>Output: [-1,-1]<br>Example 3:</p>
<p>Input: nums = [], target = 0<br>Output: [-1,-1]</p>
<a id="more"></a>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public int[] searchRange(int[] nums, int target)</span><br><span class="line">    &#123;</span><br><span class="line">        int start = 0;</span><br><span class="line">        int end = nums.length - 1;</span><br><span class="line">        int[] ans = &#123;-1, -1&#125;;</span><br><span class="line">        //<span class="built_in">test</span> <span class="keyword">case</span> is &#123;&#125;</span><br><span class="line">        <span class="keyword">if</span>(nums.length == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            int mid = (start + end) / 2;</span><br><span class="line">            <span class="keyword">if</span>(target == nums[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                //丢弃右边</span><br><span class="line">                end = mid - 1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; nums[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                end = mid - 1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                start = mid + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //考虑 tartget 是否存在，判断我们要找的值是否等于 target 并且是否越界</span><br><span class="line">        // <span class="keyword">if</span> target existed, nums[start] == target</span><br><span class="line">        <span class="keyword">if</span>(start == nums.length || nums[start] != target)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ans[0] = start;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[0] = start;</span><br><span class="line">        start = 0;</span><br><span class="line">        end = nums.length - 1;</span><br><span class="line">        <span class="keyword">while</span>(start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            int mid = (start + end) / 2;</span><br><span class="line">            <span class="keyword">if</span>(target == nums[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                //丢弃左边</span><br><span class="line">                start = mid + 1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target &lt; nums[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                end = mid - 1;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                start = mid + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[1] = end;</span><br><span class="line">        <span class="built_in">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>








]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>Binary Search</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q46 Permutations</title>
    <url>/2021/01/14/LeetCode-Q46-Permutations/</url>
    <content><![CDATA[<p>Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.</p>
<p>Example 1:</p>
<p>Input: nums = [1,2,3]<br>Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        backtrack(list, new ArrayList&lt;&gt;(), nums);</span><br><span class="line">        <span class="built_in">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public void backtrack(List&lt;List&lt;Integer&gt;&gt; list, List&lt;Integer&gt; tempList, int[] nums)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(tempList.size() == nums.length)</span><br><span class="line">        &#123;</span><br><span class="line">            list.add(new ArrayList&lt;&gt;(tempList));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(int i = 0; i &lt; nums.length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                //跳过已经存在的元素</span><br><span class="line">                <span class="keyword">if</span>(tempList.contains(nums[i])) <span class="built_in">continue</span>;</span><br><span class="line">                //将当前元素加入</span><br><span class="line">                tempList.add(nums[i]);</span><br><span class="line">                //向后继续添加</span><br><span class="line">                backtrack(list, tempList, nums);</span><br><span class="line">                //将 tempList 刚添加的元素，去掉，尝试新的元素</span><br><span class="line">                //每次超出<span class="keyword">for</span> loop的循环或者size == nums.length时都会运行此行，so called backtrack</span><br><span class="line">                tempList.remove(tempList.size() - 1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>backtrack</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q39 Combination Sum</title>
    <url>/2021/01/14/LeetCode-Q39-Combination-Sum/</url>
    <content><![CDATA[<p>Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.</p>
<p>The same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the frequency of at least one of the chosen numbers is different.</p>
<p>It is guaranteed that the number of unique combinations that sum up to target is less than 150 combinations for the given input.</p>
<a id="more"></a>


<p>Example 1:</p>
<p>Input: candidates = [2,3,6,7], target = 7<br>Output: [[2,2,3],[7]]<br>Explanation:<br>2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.<br>7 is a candidate, and 7 = 7.<br>These are the only two combinations.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;List&lt;Integer&gt;&gt; combinationSum(int[] nums, int target)</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; list = new ArrayList&lt;&gt;();</span><br><span class="line">        backtrack(list, new ArrayList&lt;&gt;(), nums, target, 0);</span><br><span class="line">        <span class="built_in">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">private void backtrack(List&lt;List&lt;Integer&gt;&gt; list, List&lt;Integer&gt; tempList, int [] nums, int remain, int start)&#123;</span><br><span class="line">    <span class="keyword">if</span>(remain &lt; 0) <span class="built_in">return</span>; //1st round: remain is target</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(remain == 0) list.add(new ArrayList&lt;&gt;(tempList));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(int i = start; i &lt; nums.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            tempList.add(nums[i]);</span><br><span class="line">            backtrack(list, tempList, nums, remain - nums[i], i);</span><br><span class="line">            //找到了一个解或者 remain &lt; 0 了，将当前数字移除，然后继续尝试</span><br><span class="line">            tempList.remove(tempList.size() - 1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>backtrack</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB basic</title>
    <url>/2021/01/14/MATLAB-basic/</url>
    <content><![CDATA[<p><strong>What is Matlab?</strong><br>Matlab Screen<br>Variables, array, matrix, indexing Operators (Arithmetic, relational, logical ) Display Facilities<br>Flow Control<br>Using of M-File<br>Writing User Defined Functions Conclusion</p>
<a id="more"></a>

<h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><ul>
<li><p>No need for types. i.e.<br><del>int a;</del><br><del>double b;</del><br><del>float c;</del></p>
</li>
<li><p>All variables are created with double precision unless specified and they are matrices.<br>Example:<br>x=5;<br>x1=2;</p>
</li>
</ul>
<p>a vector </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = [1 2 5 1]</span><br></pre></td></tr></table></figure>

<p>x=<br>1 2 5 1 <em>不加分号， 按下回车就输出</em></p>
<p>a matrix<br>x = [1 2 3; 5 1 4; 3 2 -1]; <em>If you include “;” at the end of each statement, result will not be shown immediately</em></p>
<h3 id="long-array-matrix"><a href="#long-array-matrix" class="headerlink" title="long array, matrix"></a>long array, matrix</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">t =1:10</span><br></pre></td></tr></table></figure>
<p>t=<br>1 2 3 4 5 6 7 8 9 10</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">t = 2: -0.5: -1</span><br></pre></td></tr></table></figure>

<p>t =<br>2.0000    1.5000    1.0000    0.5000         0   -0.5000   -1.0000</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">t = [1:4; 5:8]</span><br></pre></td></tr></table></figure>
<p>x=    1  2  3  4<br>        5  6  7  8</p>
<h3 id="Generating-Vectors-from-functions"><a href="#Generating-Vectors-from-functions" class="headerlink" title="Generating Vectors from functions"></a>Generating Vectors from functions</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = zeros(1,3) </span><br></pre></td></tr></table></figure>
<p>x=<br>    0  0  0</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = ones(1,3) </span><br></pre></td></tr></table></figure>
<p>x=<br>     1  1  1</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = rand(1,3) </span><br></pre></td></tr></table></figure>
<p>ouput: 1 column 3 numbers<br>x=<br>    0.9501, 0.2345, 0.3044    </p>
<h3 id="Concatenation-of-Matrices"><a href="#Concatenation-of-Matrices" class="headerlink" title="Concatenation of Matrices"></a>Concatenation of Matrices</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; [1 2], y &#x3D; [4 5], z&#x3D;c[0 0]</span><br></pre></td></tr></table></figure>

<p>A = [x  y]<br>1  2  4  5<br>B = [x ; y]<br>1  2<br>4  5</p>
<h3 id="operand"><a href="#operand" class="headerlink" title="operand"></a>operand</h3><p><strong>.*</strong> element-by-element multiplication<br><strong>./</strong> element-by-element division<br><strong>.^</strong> element-by-element power</p>
<p>== Equal to<br>~= Not equal to<br>&lt; Strictly smaller<br>__&gt;__ Strictly greater<br>&lt;= Smaller than or equal to &gt;= Greater than equal to<br>&amp; And operator<br>| Or operator</p>
<p>i.e.<br>Plot the function e-x/3sin(x) between 0≤x≤4π</p>
<ul>
<li><p>Create an x-array of 100 samples between 0 and 4π</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; linspace(0, 4*pi, 100);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Calculate sin(.) of the x-array</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y &#x3D; sin(x);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Calculate e-x/3 of the x-array</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y1 &#x3D; exp(-x&#x2F;3);</span><br></pre></td></tr></table></figure>
</li>
<li><p>Multiply the arrays y and y1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y2 &#x3D; y .* y1;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>Plot the y2-array</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plot(y2);</span><br></pre></td></tr></table></figure>

<p><strong>Display facilities</strong></p>
<p>plot(y)<br>stem(y)<br>title(‘This is the sinus function’)<br>xlabel(‘x (secs)’)<br>ylabel(‘sin(x)’)</p>
<h3 id="Control-Structures"><a href="#Control-Structures" class="headerlink" title="Control Structures"></a>Control Structures</h3><p>Output 1-200, the difference between each number is 3 i.e 1,4,7,10,13,16…..</p>
<p><strong>For loop</strong><br>for i=Index_Array<br>    Matlab Commands;<br>end</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for j&#x3D;1:3:200</span><br><span class="line">display(j);</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>check if the number is even</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i &#x3D; 1:10</span><br><span class="line">if mod(x(i),2) &#x3D;&#x3D; 0</span><br><span class="line">y(i) &#x3D; 1;</span><br><span class="line">else</span><br><span class="line">y(i) &#x3D; 0;</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>Calculate sum that can be divided by 3 in first 10 numbers</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; 0;</span><br><span class="line">&gt;&gt; for i &#x3D; 1:10</span><br><span class="line">if mod(x(i),3) &#x3D;&#x3D; 0</span><br><span class="line">s &#x3D; s + x(i);</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>while loop</strong></p>
<p>while (condition)<br>    Matlab Commands;<br>end</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">while ((a&gt;3) &amp; (b&#x3D;&#x3D;5)) </span><br><span class="line">    Some Matlab Commands;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><strong>Function</strong></p>
<p>After write this function, run the program, MATLAB will ask you to input. Rember the function name must match the file name.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function out &#x3D; squarer2(A, ind)</span><br><span class="line">if(ind &#x3D;&#x3D; 1)</span><br><span class="line">    out &#x3D; A^2;</span><br><span class="line">elseif (ind &#x3D;&#x3D; 2)</span><br><span class="line">    out &#x3D; A.^2;</span><br><span class="line">end</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>check if a number is even, if even returns 1</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function y &#x3D; is_even(x)</span><br><span class="line"></span><br><span class="line">y &#x3D; mod(x, 2);</span><br></pre></td></tr></table></figure>


<h3 id="strcmp-strfind-fgetl"><a href="#strcmp-strfind-fgetl" class="headerlink" title="strcmp, strfind, fgetl"></a>strcmp, strfind, fgetl</h3><ul>
<li><p>tf = strcmp(s1,s2) compares s1 and s2 and returns 1 (true) if the two are identical. Otherwise, strcmp returns 0 (false). Text is considered identical if the size and content of each are the same. The return result, tf, is of data type logical.</p>
</li>
<li><p>k = strfind(str,pattern) searches str for occurrences of pattern. The output, k, indicates the starting index of each occurrence of pattern in str. If pattern is not found, then strfind returns an empty array, []. The strfind function executes a case-sensitive search.</p>
</li>
<li><p>tline = fgetl(fileID) returns the next line of the specified file, removing the newline characters. fileID is an integer file identifier obtained from fopen. tline is a text string unless the line contains only the end-of-file marker. In this case, tline is the numeric value -1.</p>
</li>
</ul>
<h3 id="Struct"><a href="#Struct" class="headerlink" title="Struct"></a>Struct</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my_struct.name &#x3D; &#39;My new struct&#39;</span><br><span class="line">my_struct.age &#x3D; 25</span><br><span class="line"></span><br><span class="line">class(my_struct.name)  --&gt; char</span><br><span class="line">class(my_struct.age)   --&gt; double</span><br><span class="line">isfield(my_struct, &#39;name&#39;) --&gt; 1, because there is a name in struct</span><br><span class="line"></span><br><span class="line">rmfield(my_struct, &#39;age&#39;) --&gt;remove age</span><br><span class="line">setfield(my_struct, &#39;gender&#39;, f)  --&gt; gender: &#39;f&#39;</span><br><span class="line"></span><br><span class="line">my_struct.contact.phone &#x3D; 123456</span><br><span class="line">my_struct.contact.email &#x3D; person@gmail</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>my_struct =<br>        name: ‘My new struct’</p>
<p>ans =<br>            name: ‘My new struct’<br>            age: 25<br>            gender: ‘f’</p>
<p>my_struct.contact<br>ans =<br>            phone: 123456<br>            email: ‘person@gmail.com’</p>
<p><strong>Altenative way</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">S &#x3D; struct(&#39;name&#39;, &#39;Bob&#39;, &#39;email&#39;, &#39;bob@gmail.com&#39;)</span><br></pre></td></tr></table></figure>
<p>S =<br>        name: ‘Bob’<br>        email: ‘bob@gmail.com’</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">my_cell&#123;1&#125; &#x3D; &#39;hello world&#39;  --&gt; call mycell, it simply print hello world</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">my_cell&#123;&#39;A&#39;&#125; &#x3D; &#123;1 2; 3 4&#125;; -&gt; 2*2 matrix</span><br></pre></td></tr></table></figure>

<h3 id="Plot-Data"><a href="#Plot-Data" class="headerlink" title="Plot Data"></a>Plot Data</h3><p><strong>Plot Fibonacci</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">y &#x3D; [1,1,2,3,5,8,13,21]</span><br><span class="line">x &#x3D; [0.1,0.2,0.3,0.4,0.5,0.6,0.7]</span><br><span class="line">plot(y)</span><br><span class="line">plot(x, y)</span><br></pre></td></tr></table></figure>

<p><strong>Plot sin and cos</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; linspace(0, 2*pi, 100);</span><br><span class="line">y &#x3D; sin(x);</span><br><span class="line">plot(x,y)</span><br><span class="line">y2 &#x3D; cos(x);</span><br><span class="line">plot(x, y, x, y2);</span><br><span class="line">plot(x, y, &#39;-&#39;, x, y2, &#39;.&#39;);</span><br></pre></td></tr></table></figure>
<p><strong>Add noise point</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; linspace(0, 2*pi, 1000);</span><br><span class="line">y &#x3D; 10*sin(x) + randn(1,1000);</span><br><span class="line">plot(x,y)</span><br><span class="line"></span><br><span class="line">scatter(x,y)</span><br></pre></td></tr></table></figure>

<ul>
<li>scatter is sorted, helpful in data analysis</li>
</ul>
<p><strong>bar chart</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 1:10</span><br><span class="line">bar(x)</span><br></pre></td></tr></table></figure>
<p><strong>Histogram</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; randn(1000,1);</span><br><span class="line">&gt;&gt; hist(x)</span><br></pre></td></tr></table></figure>

<p><strong>Pie chart</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; 1:5;</span><br><span class="line">pie(x)</span><br></pre></td></tr></table></figure>
<h3 id="File-I-O"><a href="#File-I-O" class="headerlink" title="File I/O"></a>File I/O</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">csvread()</span><br><span class="line">csvwrite()</span><br><span class="line">save()</span><br><span class="line">load()</span><br></pre></td></tr></table></figure>

<h3 id="subplots-3D-plot"><a href="#subplots-3D-plot" class="headerlink" title="subplots, 3D plot"></a>subplots, 3D plot</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">x = linspace(0, 2*pi, 100);</span><br><span class="line">y = sin(x)</span><br><span class="line">z = y + randn(1,100);</span><br><span class="line">plot(x,z,x, y)</span><br><span class="line">subplot(2,1,1)</span><br><span class="line">plot(x,y)</span><br><span class="line"></span><br><span class="line">subplot(2,1,2); --&gt; <span class="built_in">print</span> 2 rows, 1 column</span><br><span class="line">plot(x,z)</span><br></pre></td></tr></table></figure>

<p><strong>3D plot</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">z = randn(100,100);</span><br><span class="line">size(z)</span><br><span class="line">surf(z) </span><br><span class="line">contour(z) --&gt; 2d visualization</span><br></pre></td></tr></table></figure>

<p><strong>Title and label</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title(&#39;A plot of sin(x)&#39;)</span><br><span class="line">xlabel(&#39;my label for x-axis&#39;)</span><br><span class="line">ylable(&#39;my lable for y-axis&#39;)</span><br></pre></td></tr></table></figure>
<p><strong>Complete code to generate two graphs for sinx and cos x</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x &#x3D; linspace(0, 2*pi, 100);</span><br><span class="line">y &#x3D; sin(x);</span><br><span class="line">plot(x,y)</span><br><span class="line">title(&#39;A plot of sin(x)&#39;)</span><br><span class="line">xlabel(&#39;my label for x-axis&#39;)</span><br><span class="line">ylabel(&#39;my lable for y-axis&#39;)</span><br><span class="line">z &#x3D; cos(x);</span><br><span class="line">subplot(2,1,1) --&gt;first using subplot to choose a location, then plot at that place</span><br><span class="line">plot(x,y) </span><br><span class="line">title(&#39;sin(x)&#39;)</span><br><span class="line">subplot(2,1,2)</span><br><span class="line">plot(x,z)</span><br><span class="line">title(&#39;cos(x)&#39;)</span><br></pre></td></tr></table></figure>

<h3 id="Sound-processing"><a href="#Sound-processing" class="headerlink" title="Sound processing"></a>Sound processing</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; audioread(&#39;daliwan.wav&#39;)</span><br><span class="line"></span><br><span class="line">[d,fs] &#x3D; audioread(&#39;daliwan.wav&#39;)</span><br><span class="line">sound(d,fs) --&gt;play audio</span><br></pre></td></tr></table></figure>

<p><strong>Reverse audio</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d2 &#x3D; flipud(d);</span><br><span class="line">plot(d2)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;Store reversed audio file</span><br><span class="line">audiowrite(&#39;daliwan_reverse.wav&#39;, d2, fs)</span><br></pre></td></tr></table></figure>

<p><strong>2x speed</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d4 &#x3D; downsampel(d,2) --&gt; d was the original audio</span><br><span class="line">sound(d4,fs)</span><br></pre></td></tr></table></figure>
<h3 id="Generate-random-values"><a href="#Generate-random-values" class="headerlink" title="Generate random values"></a>Generate random values</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">randi(10)</span><br></pre></td></tr></table></figure>
<p>ans =<br>        9</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R &#x3D; randi(10, 3)</span><br></pre></td></tr></table></figure>
<p>R =<br>        10  7  6<br>        2   1  10<br>        10  3  10</p>
<p><strong>Histograph with random values</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hist(rand(1000,1)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q48 Rotate Image</title>
    <url>/2021/01/15/LeetCode-Q48-Rotate-Image/</url>
    <content><![CDATA[<p>You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).</p>
<p>You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void rotate(int[][] matrix) &#123;</span><br><span class="line">    &#x2F;&#x2F;以对角线为轴交换</span><br><span class="line">    for (int i &#x3D; 0; i &lt;  matrix.length; i++) </span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;j &lt;&#x3D; i 确保交换除了【0，0】，【1，1】和 【2，2】位置的数</span><br><span class="line">        for (int j &#x3D; 0; j &lt;&#x3D;i; j++) </span><br><span class="line">        &#123;</span><br><span class="line">            if (i &#x3D;&#x3D; j) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            int temp &#x3D; matrix[i][j];</span><br><span class="line">            matrix[i][j] &#x3D; matrix[j][i];</span><br><span class="line">            matrix[j][i] &#x3D; temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    &#x2F;&#x2F;交换column</span><br><span class="line">    &#x2F;&#x2F;左半边的值是i，右半边的值是j</span><br><span class="line">    &#x2F;&#x2F;j从最右边开始，与最左边的竖着交换，j往左递减</span><br><span class="line">    for (int i &#x3D; 0, j &#x3D; matrix.length - 1; i &lt; matrix.length &#x2F; 2; i++, j--) </span><br><span class="line">    &#123;</span><br><span class="line">        for (int k &#x3D; 0; k &lt; matrix.length; k++) &#123;</span><br><span class="line">            int temp &#x3D; matrix[k][i];</span><br><span class="line">            matrix[k][i] &#x3D; matrix[k][j];</span><br><span class="line">            matrix[k][j] &#x3D; temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>LeetCode Q49 Group Anagrams</title>
    <url>/2021/01/16/LeetCode-Q49-Group-Anagrams/</url>
    <content><![CDATA[<p>Given an array of strings strs, group the anagrams together. You can return the answer in any order.</p>
<p>An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.</p>
<a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution </span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) </span><br><span class="line">    &#123;</span><br><span class="line">        HashMap&lt;String, List&lt;String&gt;&gt; map &#x3D; new HashMap&lt;&gt;();</span><br><span class="line">        &#x2F;&#x2F;主要思路是利用sort，将eat，ate，tea全部sort成aet</span><br><span class="line">        &#x2F;&#x2F;然后在hashmap里找，如果有相同的就加入map</span><br><span class="line">        for(int i &#x3D; 0; i &lt; strs.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            char[] letter &#x3D; strs[i].toCharArray();</span><br><span class="line">            Arrays.sort(letter);</span><br><span class="line">            String key &#x3D; String.valueOf(letter);</span><br><span class="line">        &#x2F;&#x2F;String ley store values sorted</span><br><span class="line">        &#x2F;&#x2F;key: &quot;aet&quot;</span><br><span class="line">            if(map.containsKey(key))</span><br><span class="line">            &#123;</span><br><span class="line">                map.get(key).add(strs[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                List&lt;String&gt; tempList &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">                tempList.add(strs[i]);</span><br><span class="line">                map.put(key, tempList);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return new ArrayList&lt;List&lt;String&gt;&gt;(map.values());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>HashMap</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q53 Maximum Subarray</title>
    <url>/2021/01/18/LeetCode-Q53-Maximum-Subarray/</url>
    <content><![CDATA[<p>Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.</p>
<p>Example 1:</p>
<p>Input: nums = [-2,1,-3,4,-1,2,1,-5,4]<br>Output: 6<br>Explanation: [4,-1,2,1] has the largest sum = 6.</p>
<a id="more"></a>
<p>先用dp数组创建出一个与已给数组相同长度的array，并且全是0. 让dp array的第一个值为已给数组的第一个值，同时initialize max的值和dp第一个数字的值一样。for loop从第二个位置遍历已给数组，如果dp[ i ] 前面的值是负数，那么直接将已给数组的值加入进dp数组里。如果是正数就将dp[ i - 1] 与已给数组的nums[ i ] 相加，最后比较是max大，还是dp数组现在的这个值大</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">class Solution</span><br><span class="line">&#123;</span><br><span class="line">   public int maxSubArray(int[] nums) &#123;</span><br><span class="line">    int n &#x3D; nums.length;</span><br><span class="line">    int[] dp &#x3D; new int[n];</span><br><span class="line">    int max &#x3D; nums[0];</span><br><span class="line">    dp[0] &#x3D; nums[0];</span><br><span class="line">    for (int i &#x3D; 1; i &lt; n; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F;两种情况更新 dp[i]</span><br><span class="line">        if (dp[i - 1] &lt; 0) &#123;</span><br><span class="line">            dp[i] &#x3D; nums[i];</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            dp[i] &#x3D; dp[i - 1] + nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;更新 max</span><br><span class="line">        max &#x3D; Math.max(max, dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return max;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Leetcode</category>
      </categories>
      <tags>
        <tag>dynamic programming</tag>
      </tags>
  </entry>
  <entry>
    <title>Info Assurance &amp; Security Lecture 3,4</title>
    <url>/2021/01/13/CSE543-Lecture-3/</url>
    <content><![CDATA[<h3 id="Threats-and-Vulnerbilities"><a href="#Threats-and-Vulnerbilities" class="headerlink" title="Threats and Vulnerbilities"></a>Threats and Vulnerbilities</h3><p>strategies: specific goal we want to achieve<br>principle: high level</p>
<ul>
<li><strong>information</strong><br>telephone, records</li>
</ul>
<p>Information are not just computer information</p>
<ul>
<li>Threat is a <strong>potential occurrence</strong> that can have an undesirable effect on the system.</li>
<li>A <strong>vulnerability</strong> is a weakness that makes a threat possibily occur, and there is not way to ensure no vulnerability</li>
</ul>
<h3 id="Four-categories-of-threats"><a href="#Four-categories-of-threats" class="headerlink" title="Four categories of threats"></a>Four categories of threats</h3><ul>
<li>disclosure: Unauthorized access to information<ul>
<li>snooping </li>
</ul>
</li>
<li>deception: Acceptance of false data<ul>
<li>altenation</li>
<li>spoofing</li>
<li>denial of receipt ( when we sent people a email, how to make sure we are sending to the right person? Using public and private keysg)</li>
</ul>
</li>
</ul>
<h3 id="Security-principles"><a href="#Security-principles" class="headerlink" title="Security principles"></a>Security principles</h3><ul>
<li><p><strong>Auditability</strong> and <strong>Accountability</strong></p>
<ul>
<li><strong>Auditability</strong> is the ability to <strong>verify</strong> the activities of a <strong>control</strong></li>
<li><strong>Accountability</strong> is to hold <strong>Individual answeable responsible or liable</strong></li>
</ul>
</li>
<li><p><strong>Access Control</strong></p>
<ul>
<li>Separation of functions - No one owns all process, control all security features, or process <strong>unrestricted access to all information</strong> i.e. (CEO has the right to know everything, but checker need to write record)</li>
<li>Role-based access control (RBAC)  <ul>
<li>Asscoiate role with each <strong>individual</strong></li>
<li>Individual needs to be <strong>authentication</strong> </li>
</ul>
</li>
<li>Situation-aware c</li>
</ul>
</li>
</ul>
<ol start="3">
<li>Confidentiality<ul>
<li>confidentiality principles include:<ol>
<li>need to know: An individual should possess combination of <strong>clearance, privilege of access, and need-to-know</strong>,before being authorized access</li>
<li>Data seperation</li>
<li>Compartmentalization: seperate tasks</li>
<li>Classification: Assign labels to information to identify the appropriate level of protection, handling and control the information <ul>
<li>Corporation: public use - registered- confidential</li>
<li>US Goverment - Official use only - top secret </li>
</ul>
</li>
<li>Encryption <ul>
<li>A reversible process of transforming plain text</li>
</ul>
</li>
</ol>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Info Assurance &amp; Security</category>
      </categories>
      <tags>
        <tag>CSE543</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode Q55 Jump Game</title>
    <url>/2021/01/24/LeetCode-Q55-Jump-Game/</url>
    <content><![CDATA[<p>Given an array of non-negative integers <code>nums</code>, you are initially positioned at the <strong>first index</strong> of the array.</p>
<p>Each element in the array represents your maximum jump length at that position.</p>
<p>Determine if you are able to reach the last index.</p>
<ul>
<li>First, initialize <strong>end</strong> is 0, it makes sure that we jump to max position later.</li>
<li>Initialize maxPosition = 0, it keep looking for max position</li>
<li>Traverse the nums array</li>
<li>if we ever found end is smaller than current index, that means nums[end] is 0, we return false</li>
<li>Updating maxPostion, find max between maxPosition and current index + current number</li>
<li>let end = maxPosition if we reach end</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canJump</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">int</span> end = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> maxPosition = <span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="comment">//当前更新超过了边界，那么意味着出现了 0 ，直接返回 false</span></span><br><span class="line">        <span class="keyword">if</span>(end &lt; i)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//找能跳的最远的 </span></span><br><span class="line">        maxPosition = Math.max(maxPosition, nums[i] + i);<span class="comment">//现在的数加上现在的index，表示了最远可以到第几步 </span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>( i == end)&#123; <span class="comment">//遇到边界，就更新边界，并且步数加一</span></span><br><span class="line">            end = maxPosition; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//最远的距离是否到答末尾</span></span><br><span class="line">    <span class="keyword">return</span> maxPosition&gt;=nums.length-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>leetcode</category>
      </categories>
  </entry>
  <entry>
    <title>LeetCode Q56 Merge Intervals</title>
    <url>/2021/01/25/LeetCode-Q56-Merge-Intervals/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] merge(<span class="keyword">int</span>[][] intervals)</span><br><span class="line">    &#123;</span><br><span class="line">    </span><br><span class="line">        Arrays.sort(intervals, (a, b) -&gt; Integer.compare(a[<span class="number">0</span>], b[<span class="number">0</span>]));</span><br><span class="line">        LinkedList&lt;<span class="keyword">int</span>[]&gt; merged = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] interval : intervals) &#123;</span><br><span class="line">            <span class="comment">// if the list of merged intervals is empty or if the current</span></span><br><span class="line">            <span class="comment">// interval does not overlap with the previous, simply append it.</span></span><br><span class="line">            <span class="keyword">if</span> (merged.isEmpty() || merged.getLast()[<span class="number">1</span>] &lt; interval[<span class="number">0</span>]) &#123;</span><br><span class="line">                merged.add(interval);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// otherwise, there is overlap, so we merge the current and previous</span></span><br><span class="line">            <span class="comment">// intervals.</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                merged.getLast()[<span class="number">1</span>] = Math.max(merged.getLast()[<span class="number">1</span>], interval[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> merged.toArray(<span class="keyword">new</span> <span class="keyword">int</span>[merged.size()][]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Algo Two Number Sum</title>
    <url>/2021/01/29/Algo-Two-Number-Sum/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Program</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] twoNumberSum(<span class="keyword">int</span>[] array, <span class="keyword">int</span> targetSum) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; array.length; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(array[i] + array[j] == targetSum)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;array[i], array[j]&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Time complexity O(n^2)</strong></p>
<hr>
<p><strong>HashMap</strong> Time complexity O(n)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Program</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] twoNumberSum(<span class="keyword">int</span>[] array, <span class="keyword">int</span> targetSum) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; nums = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : array)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ans = targetSum - num;</span><br><span class="line">            <span class="keyword">if</span>(nums.containsKey(ans))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;ans, num&#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                nums.put(num,num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>AlgoExpert</tag>
      </tags>
  </entry>
  <entry>
    <title>Multimedia Information Systems Lecture 1, 2</title>
    <url>/2021/01/12/CSE408-Lecture-1,2/</url>
    <content><![CDATA[<h3 id="About-CSE-408"><a href="#About-CSE-408" class="headerlink" title="About CSE 408"></a>About CSE 408</h3><p>Description: the course deals with the design, use, and applications of multimedia information systems. An introduction to acquisition, processing, compression, storage, retrieval, and presentation of data from different media types such as images, text, voice, graphics, and alphanumeric.<br>• Learning objectives: master fundamental concepts, specific domain knowledge, applications, and current research topics.</p>
<a id="more"></a>

<h3 id="Topics-To-Be-Covered"><a href="#Topics-To-Be-Covered" class="headerlink" title="Topics To Be Covered"></a>Topics To Be Covered</h3><p>• Introduction to multimedia systems<br>• Web search<br>• Natural language processing<br>• Sound informatics<br>• Image &amp; video<br>• Compression algorithms and standards (JPEG, MPEG)<br>• Multimedia Information System design<br>• Data mining and artificial intelligence<br>• Data visualization<br>• Computer vision algorithms and applications<br>• Multimedia Information System performance evaluation</p>
<h3 id="Multimedia-elements"><a href="#Multimedia-elements" class="headerlink" title="Multimedia elements"></a>Multimedia elements</h3><p>Audio -&gt; Video -&gt; Animation -&gt; Interactive -&gt; graphic -&gt; text</p>
<p><strong>What is Multimedia?</strong></p>
<p>Multimedia is content that uses a combination of different content forms such as text, audio, images. amiation, video and inteactive content. </p>
<p><strong>Ex: a web-based video editor that lets anyone create a new video by editing, annotating and reminxing videos on the cloud</strong></p>
<ul>
<li>digital media- usually recorded, displayed, or accessed using electronic devices</li>
</ul>
<p><strong>Multimedia research Topics and projects</strong></p>
<ol>
<li>Multimedia processign and coding</li>
<li>multimedia system suppory and networking</li>
<li>Multimedia tools, end-systems and applications</li>
<li>Multi-model interaction and integration</li>
</ol>
<h2 id="Lecture-2"><a href="#Lecture-2" class="headerlink" title="Lecture 2"></a>Lecture 2</h2><p>Assumption 1: A hyperlink between pages denotes author perceived relevance (quality signal)</p>
<p>Assumption 2: The author of the hyperlink describes the target page (texual context)</p>
<p>Q: how hard is it go from one page to another?<br>Over 75% of the time there is no directed path from one ranfom web page to another</p>
<p>When a directed path exitsts, 16 clicks<br>When an undirected path exists its average 7 clicks</p>
<p><strong>six degree of separation</strong> 你和任何一个陌生人之间所间隔的人不会超过六个</p>
<h3 id="Information-retrieval"><a href="#Information-retrieval" class="headerlink" title="Information retrieval"></a>Information retrieval</h3><ul>
<li>IR is the science of searching for documents, info within documents…</li>
</ul>
<p><strong>Web search vs. Info retrieval</strong></p>
<ul>
<li>The web contains a lot of duplication</li>
</ul>
<p>• The scale of web search is way beyond traditional information retrieval<br>• The web is very dynamic<br>•  The quality of web page is not uniform<br>•  Have to figure out which belong to the topic, range is wide</p>
<p><strong>Three types of queires</strong><br>Navigational: Ex: Facebook. Simply look the place you want to reach<br>Informational: what is age of CLINTON? very specific<br>Transacational: search for commercial nature, Eg: gut insurance quote</p>
<p>There are more than 3.5B google searches every day<br>76% of global searches take place on google<br>60% are from mobile devices<br>80% of sarches were informational</p>
<h3 id="The-anatomy-of-a-large-scale-hypertexual-web-search-engine"><a href="#The-anatomy-of-a-large-scale-hypertexual-web-search-engine" class="headerlink" title="The anatomy of a large-scale hypertexual web search engine"></a>The anatomy of a large-scale hypertexual web search engine</h3><p>Web searching: architecture<br>Web crawler: first algorithm<br>a way to collect large data</p>
<p>retireve the page, extract URL, update and repeat</p>
<h3 id="Web-searching-Architecture"><a href="#Web-searching-Architecture" class="headerlink" title="Web searching: Architecture"></a>Web searching: Architecture</h3><ul>
<li>Documents stored on many Web servers are indexed in a single central index</li>
<li>The central index is implemented as a single system on very large number of computers</li>
</ul>
<p><strong>Concept of relevance and importance</strong><br>Relevance</p>
<ol>
<li>Explain three state of the art MM research topicsinvolved documents similarity between terms in the query and each document</li>
<li>location info, for use of proximity in multi-world search</li>
<li>in page title, page url important</li>
<li>font, color also considerd</li>
</ol>
<p>Importance: measures documents by their likelihood of being useful to a variety of users. popularity.</p>
<p><strong>Inverted index</strong><br>• For each word: set of documents where it occurs<br>Take popular word in documents as a term</p>
<h3 id="page-rank-algorithm"><a href="#page-rank-algorithm" class="headerlink" title="page rank algorithm"></a>page rank algorithm</h3><ul>
<li>Used to estimate popularity of documents</li>
<li>if doc has more links to it, then more findable it is.</li>
</ul>
<p><strong>Intuitive model</strong><br>A user:</p>
<ol>
<li>starts at a random page on the web</li>
<li>select random hyperlink from current page and jumps to the corresponding page</li>
<li>repeat step 2 at a very large number of times.</li>
</ol>
<p>page are ranked according to the relative frequency with which they are visted </p>
<p><strong>Basic algorithm</strong><br>• Matrix Representation<br>• Normalize by number of links from page<br>• weighting pages- initally all pages 1/n, recalculate weights<br>• iterate</p>
<p>Random teleports<br>The google solution for spider traps</p>
<p><strong>SIngle word query ranking</strong><br>• Assign weights</p>
<p><strong>Multi-word query ranking</strong><br>Similar to single word but have to use proximity on the document</p>
<h3 id="Indexing-the-web-goals-Precision"><a href="#Indexing-the-web-goals-Precision" class="headerlink" title="Indexing the web goals: Precision"></a>Indexing the web goals: Precision</h3><p><strong>short queries applied to very large numbers of items leads to large number of hits</strong></p>
<ul>
<li>Goal is that the first 10-100 hits should satisify users</li>
<li>Recall is not an important criterion</li>
</ul>
<p>completeness of index is not an important factot, comprehensive crawling is unnecessary</p>
<h3 id="Precision-and-Recall"><a href="#Precision-and-Recall" class="headerlink" title="Precision and Recall"></a>Precision and Recall</h3><ul>
<li>Precision is also called ( positive predictive value ) is the fraction of retrieved instanced that are relevant</li>
<li>Recall (AKA sensitivity), is the fraction of relevent instances that are retrieved</li>
</ul>
<h3 id="Relevance-and-Importance"><a href="#Relevance-and-Importance" class="headerlink" title="Relevance and Importance"></a>Relevance and Importance</h3><ul>
<li>Relevence is considerd as ( Relevant or Not Relevant ), it is usually estimated by the similarity between the terms in the query and each document</li>
<li>Importance measure </li>
</ul>
]]></content>
      <categories>
        <category>Multimedia Information Systems</category>
      </categories>
      <tags>
        <tag>CSE408</tag>
      </tags>
  </entry>
  <entry>
    <title>Multimedia Information Systems Lecture 3 - 8</title>
    <url>/2021/01/12/CSE408-Lecture-3,4,5/</url>
    <content><![CDATA[<h3 id="Language-processing-NLP"><a href="#Language-processing-NLP" class="headerlink" title="Language processing ( NLP )"></a>Language processing ( NLP )</h3><ul>
<li>a field of CS, AI, or tasks involved in human languages, such as human-machine communication</li>
<li>Language involve many human activities, reading, writing, speaking</li>
<li>ability to perform massibe amont of textual data         ( data mining )</li>
</ul>
<p>NLP applications:<br>advanced: speech recognition, machine translation.<br>basic: spelling, grammar</p>
<p><strong>Natural language on the web</strong><br>basic components: text, links, graphic ( everything that is visual)<br>basic formating: text, links, graphic<br>Main container for document: page<br>performance: page<br>architecture: site<br>captions: highly stylize and associate with pictures</p>
<a id="more"></a>

<p>Webpages</p>
<ul>
<li>contain all kinds of language, url, links…</li>
</ul>
<p><strong>Taxonomy vs. Folksonomy</strong><br>Taxonomy ( top- down )</p>
<ul>
<li>Hierachical   </li>
<li>Exclusive : the same item cannot be in two distinct categories</li>
</ul>
<p>Folksonomy</p>
<ul>
<li>bottom-up</li>
<li>not exlusive: an item can be associated to many tags</li>
<li>flat</li>
</ul>
<p><strong>Linguistice concepts</strong></p>
<ul>
<li>language is a system of symbols with an agreed upon meaning that is used by people</li>
<li>grammar is a set of rules</li>
<li>syntax is the sentenced and their structure</li>
<li>semantics is meaning of words, their relationships</li>
<li>lexicon is the sum total of words in a language</li>
<li>smiotics is the theory of signs and symbols</li>
</ul>
<p><strong>Ambiguity</strong></p>
<ul>
<li>Natural language is highly ambiguous and must be disambiguated</li>
<li>Lexical ambiguity</li>
<li>syntactic ambiguity</li>
<li>referential amibituity</li>
</ul>
<p>Ambiguity is ubiquitous</p>
<ul>
<li>speech recognition, “younth in asia” vs “enthanasia”</li>
<li>syntactic analysis “I ate noodle with chopstick” vs. “I ate noodle with metaballs”</li>
<li>semantic analysis “The dog is in the pen” vs “the ink is in the pen”</li>
</ul>
<p><strong>Natural languages vs. computer languages</strong></p>
<ul>
<li>ambiguity is the primary difference </li>
<li>programming language designed to be unambiguious</li>
</ul>
<p>Why is NLP hard</p>
<ul>
<li>language is hard even for human, one can see the complexity and degree of specialization of fields of linguistic</li>
</ul>
<p><strong>Word segmentation</strong></p>
<ul>
<li>A possible solutions is maximum matching, make sure find correct word by macthing. start by ponting the beginning of the string, then choose the longerest world in the dictionary to match</li>
<li>Most successful word segmentation tools are based on machine learning techniques</li>
<li>nltk.org is a python tool</li>
</ul>
<p><strong>Word level NLP</strong></p>
<ul>
<li>Remove ambiguity</li>
<li>lexical analysis</li>
<li>stop world removal </li>
<li>stemming( fishing. fished, fish, fisher)</li>
<li>lemmatization: stemming + content</li>
<li>morphology (prefix)</li>
</ul>
<p><strong>Sentence Level NLP</strong></p>
<ul>
<li>syntax</li>
<li>disambiguation ( polysemy, anaphora, )</li>
<li>parsing</li>
</ul>
<p>Two levels in lexical semantics</p>
<ul>
<li>representing meaning of words</li>
<li>word sense disambiguation</li>
<li>composition semantics - to see how they combined and what that means</li>
</ul>
<p><strong>WordNet</strong></p>
<ul>
<li>semantics database for English</li>
</ul>
<p><strong>Question Answering</strong></p>
<ul>
<li>factoid<br>who, what, when</li>
<li>non factoid<br>defination</li>
</ul>
<p><strong>TEXT summarization</strong></p>
<ul>
<li>give a piece of text, automatically make a summary satisfying required constrains</li>
</ul>
<h3 id="Document-clustering"><a href="#Document-clustering" class="headerlink" title="Document clustering"></a>Document clustering</h3><ul>
<li>How to organize a large set of documents of various topics</li>
</ul>
<p><strong>Classification methods</strong></p>
<ol>
<li>manual classification</li>
<li>Rule-based<ul>
<li>There are IDE type development</li>
</ul>
</li>
</ol>
<h4 id="Document-Vectores"><a href="#Document-Vectores" class="headerlink" title="Document Vectores"></a>Document Vectores</h4><ul>
<li><strong>Focuments are represented as “bags of words”</strong></li>
<li><strong>Represented as vectores when used computationally</strong></li>
</ul>
<p><strong>Similarity between documents</strong></p>
<ul>
<li>Sum of sqaured of documents</li>
<li>Angle between vectores</li>
</ul>
<h3 id="Document-categories"><a href="#Document-categories" class="headerlink" title="Document categories"></a>Document categories</h3><ul>
<li><p>The categories are just symbolic</p>
</li>
<li><p>Data: labeled instanced</p>
<ul>
<li>Traning data</li>
<li>Held-out Data</li>
<li>Test data</li>
</ul>
</li>
<li><p>Features: attribute-value pairs which characterize each X</p>
</li>
<li><p>Experimentation cycle</p>
<ul>
<li>learn parameters</li>
<li>tune hyperparameters on held-out set</li>
<li>Compute accuracy of test set</li>
<li>Very important: never “peek” at the test set</li>
</ul>
</li>
</ul>
<h3 id="kNN-classification"><a href="#kNN-classification" class="headerlink" title="kNN classification"></a>kNN classification</h3><ul>
<li>kNN = k nearest neighbors</li>
<li>test bullet</li>
<li>Test</li>
</ul>
<p><strong>Q&amp;A session</strong></p>
<p>What is key tasks of NLP systems/algorithm</p>
<ul>
<li>disambiguition</li>
</ul>
<p>what is the difference between the connectivity matrix and the normalized connectivity matrix?</p>
<ul>
<li>sum fof columns on normaized is 1</li>
</ul>
<p>what is polysemy?</p>
<ul>
<li>related words that have multiple meanings</li>
</ul>
<p>difference between Text categorization and text clustering?</p>
<ul>
<li>categorization the label are in advance</li>
</ul>
<h2 id="Lecture-6"><a href="#Lecture-6" class="headerlink" title="Lecture 6"></a>Lecture 6</h2><ul>
<li>Amptitude</li>
<li>Frequency </li>
</ul>
<h2 id="Lecture-8"><a href="#Lecture-8" class="headerlink" title="Lecture 8"></a>Lecture 8</h2>]]></content>
      <categories>
        <category>Multimedia Information Systems</category>
      </categories>
      <tags>
        <tag>CSE408</tag>
      </tags>
  </entry>
  <entry>
    <title>Java day04 Loop</title>
    <url>/2021/02/06/Java-day04-Loop/</url>
    <content><![CDATA[<h1 id="day04-课后练习"><a href="#day04-课后练习" class="headerlink" title="day04_课后练习"></a>day04_课后练习</h1><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><ul>
<li>语法点：运算符，while，if</li>
</ul>
<ul>
<li><p>编写步骤：</p>
<ol>
<li>定义类 Test1</li>
<li>定义 main方法</li>
<li>定义变量i为0,i2为10</li>
<li>使用第一个while循环,当条件为<code>i小于5</code> 时,则进入循环</li>
<li>循环内,i自增,i2自增</li>
<li>循环内,使用if判断,当<code>i大于等于 2 </code> 并且<code> i2小于15</code> 时,同时输出i和i2的值</li>
<li>使用第二个while循环,当条件为<code>i2小于20</code> 时,则进入循环</li>
<li>循环内,i自增,i2自增</li>
<li>循环内,使用if判断,当<code>i大于8 </code> 或者<code>i2小于等于18</code> 时,同时输出i和i2的值</li>
</ol>
</li>
</ul>
<a id="more"></a>

<h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><ul>
<li><p>语法点：方法，运算符，for，while </p>
</li>
<li><p>编写步骤</p>
</li>
</ul>
<ol>
<li><p>定义类 Test2，定义 main方法</p>
</li>
<li><p>main方法中,定义int类型变量 a为1</p>
</li>
<li><p>使用while循环,判断a&lt;=5,进入循环.</p>
</li>
<li><p>while循环内部,使用for循环,初始化int类型变量b为1,当b&lt;=5时进入循环, 步进表达式b++</p>
</li>
<li><p>for循环内,不换行输出i并拼接” “</p>
</li>
<li><p>for循环外,输出换行.</p>
</li>
<li><p>for循环外,a自增.</p>
</li>
</ol>
<h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><ul>
<li><p>语法点：运算符，for，if</p>
</li>
<li><p>编写步骤</p>
<ol>
<li>定义类 Test5</li>
<li>定义 main方法</li>
<li>定义变量jj为20,a为0,b为0</li>
<li>使用for循环,初始化值ii为0,当<code>ii&lt;jj</code> 时进入循环,步进表达式为ii+=2,jj自减</li>
<li>循环内,使用if判断ii被3整除,ii赋值给a,并输出ii拼接”Hello”</li>
<li>不被3整除,ii赋值给b,并输出ii拼接”World”</li>
<li>循环外,按照格式,打印a与b的乘积</li>
</ol>
</li>
</ul>
<h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><ul>
<li>语法点：运算符，for，switch</li>
<li>打印星座信息</li>
</ul>
<p>开发提示：</p>
<ul>
<li>1-12的规律数字，可以使用for循环处理</li>
<li>根据不同的数字，匹配显示不同的文字，可以使用switch匹配</li>
</ul>
<h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><p>语法点：运算符，for，if</p>
<p>案例需求：从键盘分别输入年、月、日，使用循环for+if实现，判断这一天是当年的第几天 </p>
<p><img src="/images/JavaDay04Loop/1558052080046.png"></p>
<p>   注：判断一年是否是闰年的标准：</p>
<p>​       1）可以被4整除，但不可被100整除</p>
<p>​       2）可以被400整除</p>
<ul>
<li>开发提示：<ol>
<li>循环1-month月</li>
<li>在循环中判断该月是31天、30天、28/29天，分别累加</li>
</ol>
</li>
</ul>
<h2 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h2><p>案例需求：假设从2000年1月1日开始三天打鱼，两天晒网，从键盘输入今天的日期年、月、日，显示今天是打鱼还是晒网？</p>
<h2 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h2><ul>
<li><p>打印倒三角形，效果如图所示：</p>
<p><img src="/images/JavaDay04Loop/1558009685692.png"></p>
</li>
<li><p>开发提示：</p>
<ul>
<li><p>平面图形涉及到有行有列，考虑到嵌套for循环</p>
</li>
<li><p>一个外循环控制行，两个内循环控制输出内容</p>
</li>
<li><p>一个内循环负责输出空格，另一个内循环输出”*”</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">5</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">5</span>; k &gt; i; k--)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">    * </span><br><span class="line">   * * </span><br><span class="line">  * * * </span><br><span class="line"> * * * * </span><br><span class="line">* * * * * </span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">5</span>; j &gt; i; j--)</span><br><span class="line">           &#123;</span><br><span class="line">               System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= i; k++)</span><br><span class="line">           &#123;</span><br><span class="line">               System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<h2 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h2><ul>
<li><p>打印『X』对称图形，效果如图所示：</p>
<p><img src="/images/JavaDay04Loop/1558009720001.png"></p>
</li>
<li><p>开发提示：</p>
<ul>
<li>平面图形涉及到有行有列，考虑到嵌套for循环</li>
<li>一个外循环控制行，一个内循环控制输出内容</li>
<li>在内循环中，根据变量的变化规律，判断输出”O”还是”*”</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">7</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= <span class="number">7</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(j == i || j == <span class="number">8</span> - i)</span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;O&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h2 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h2><ul>
<li><p>打印菱形</p>
<p><img src="/images/JavaDay04Loop/1558009763069.png"></p>
<p>或</p>
<p><img src="/images/JavaDay04Loop/1558009783968.png"></p>
</li>
<li><p>开发提示：</p>
<ul>
<li>平面图形涉及到有行有列，考虑到嵌套for循环</li>
<li>一个外循环控制行，两个内循环控制输出内容</li>
<li>一个内循环负责输出空格，另一个内循环输出”*”</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> Seperate function for up-bottom and bottom-up</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span> ; i++)<span class="comment">//1</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> row = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = row * <span class="number">2</span> - <span class="number">1</span>; j &gt; i * <span class="number">2</span> - <span class="number">1</span>; j--)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; i * <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">5</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">int</span> row = <span class="number">5</span>;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span> * i - <span class="number">1</span>; j &lt; row * <span class="number">2</span> - <span class="number">2</span>; j++)</span><br><span class="line">           &#123;</span><br><span class="line">               System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">for</span>(<span class="keyword">int</span> j = i * <span class="number">2</span> - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">           &#123;</span><br><span class="line">               System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           System.out.println();</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>



</li>
</ul>
<p><strong>Diamond</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">5</span> ; i++)<span class="comment">//1</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> row = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = row * <span class="number">2</span> - <span class="number">1</span>; j &gt; i * <span class="number">2</span> - <span class="number">1</span>; j--)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; i * <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">5</span>; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> row = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">2</span> * i - <span class="number">1</span>; j &lt;= row * <span class="number">2</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = (i - <span class="number">1</span>) * <span class="number">2</span> - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Java Basic</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java day08 Parameter &amp; Overload &amp; Constructor</title>
    <url>/2021/02/06/Java-Day08-Parameter/</url>
    <content><![CDATA[<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(max(<span class="number">1</span>,<span class="number">4</span>));</span><br><span class="line">        System.out.println(max(<span class="number">1.3</span>,<span class="number">4.2</span>, <span class="number">5.6</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Math.max(a, b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Java doesn&#x27;t care return value</span></span><br><span class="line">    <span class="comment">//As long as parameter list not equal, that is overload</span></span><br><span class="line"><span class="comment">//    public static int max(double a, double b, double c)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        return Math.max(Math.max(a, b), c);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">max</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Math.max(Math.max(a, b), c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>Java doesn’t care return value(public static double…) (public static int…)<br>As long as parameter list not equal, that is overload</strong></p>
<a id="more"></a>

<h3 id="Variadic-method"><a href="#Variadic-method" class="headerlink" title="Variadic method"></a>Variadic method</h3><ol>
<li><p>可变参数必须在parameter list的最后位置</p>
</li>
<li><p>一个method只能有一个</p>
</li>
<li><p>int[] 不能和 int…同时存在，在底层他们是一样的</p>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(sum());</span><br><span class="line">        System.out.println(sum(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">   public static int sum(int[] nums)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        int sum = 0;</span></span><br><span class="line"><span class="comment">        for(int i = 0; i &lt; nums.length; i++)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            sum += nums[i];</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return sum;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span>... nums)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>The main difference with the commented one is <strong>int… nums</strong> can run both array and random size number, but <strong>int[] nums</strong> can only accept array.</p>
<p><strong>Find max between 1 and any array of numbers</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println(sum());不可以，其中有非可变参数，必须传值</span></span><br><span class="line">        System.out.println(max(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Find max between 1 and any array of numbers</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span>... nums)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = num1;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &gt; max)</span><br><span class="line">            &#123;</span><br><span class="line">                max = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Overload"><a href="#Overload" class="headerlink" title="Overload"></a>Overload</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        GraphicTools g1 = <span class="keyword">new</span> GraphicTools();</span><br><span class="line">        System.out.println(g1.getTriangleArea(<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">        System.out.println(g1.getTriangleArea(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphicTools</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getTriangleArea</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">double</span> height)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (base * height) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getTriangleArea</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">double</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a + b &gt; c &amp;&amp; a + c &gt; b &amp;&amp; b + c &gt; a)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">double</span> s = (a + b + c) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">return</span> Math.sqrt(s * (s - a) * (s - b) * (s - c));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>Variadic method Exercise</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        GraphicTools g1 = <span class="keyword">new</span> GraphicTools();</span><br><span class="line">        System.out.println(g1.stringCombination(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>));</span><br><span class="line">        System.out.println(g1.multi(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GraphicTools</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">stringCombination</span><span class="params">(String...args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// String concatenation from 0, so 1 parameter</span></span><br><span class="line">        <span class="comment">// is enough</span></span><br><span class="line">        String combination = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; args.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">          combination += args[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> combination;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">long</span> <span class="title">multi</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>...n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="keyword">long</span> num1 = a;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n.length; i++)</span><br><span class="line">       &#123;</span><br><span class="line">          num1 = num1 * n[i];</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> num1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Membe-Variables-and-Local-variables"><a href="#Membe-Variables-and-Local-variables" class="headerlink" title="Membe Variables and Local variables"></a>Membe Variables and Local variables</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 成员变量如果没有初始化有默认值，局部变量没有初始化会报错</span><br><span class="line">（2）局部变量，methods被调用，就开辟一块内存给methods的parameter list，methods执行结束就结束</span><br><span class="line">    成员变量，随着对象的创建而分配，对象垃圾回收而结束</span><br><span class="line">（3）成员变量有很多修饰符</span><br><span class="line">     局部变量只有final</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    Member variables: in class, out of methods, stored in head</span></span><br><span class="line"><span class="comment">    class</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        int foo;//member variable</span></span><br><span class="line"><span class="comment">        void foobar()</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Local variables: in methods, stored in stack</span></span><br><span class="line"><span class="comment">        - parameter are local variables</span></span><br><span class="line"><span class="comment">    class</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        void foobar()</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            int foo; // local variable</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String name = <span class="string">&quot;Bryce&quot;</span>; <span class="comment">// name is local variable</span></span><br><span class="line">        <span class="keyword">int</span> age = <span class="number">23</span>;<span class="comment">// age is local variable</span></span><br><span class="line"></span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student(); <span class="comment">// s1 is local</span></span><br><span class="line">        s1.name = name;</span><br><span class="line">        s1.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    String name;<span class="comment">// member</span></span><br><span class="line">    <span class="keyword">int</span> age; <span class="comment">// member</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">set</span><span class="params">(String n, <span class="keyword">int</span> a)</span> <span class="comment">// n &amp; a is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        age = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="Object-array"><a href="#Object-array" class="headerlink" title="Object array"></a>Object array</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array可以存基本数据类型，也可以存引用数据类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">String[] arr; 存了一组字符串对象</span></span><br><span class="line"><span class="comment">Student[] arr：存了一组学生对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//use array to store five radius object, radius from</span></span><br><span class="line">        <span class="comment">//1 - 5</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. declare object array</span></span><br><span class="line">        Circle[] arr = <span class="keyword">new</span> Circle[<span class="number">5</span>];<span class="comment">// &quot;new&quot; is not creating circle object, it is creating array object</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. traverse and assign values</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//arr[i].radius = i + 1;//NullPointerException</span></span><br><span class="line">            <span class="comment">//要在遍历赋值的时候创建对象</span></span><br><span class="line">            arr[i] = <span class="keyword">new</span> Circle();</span><br><span class="line">            arr[i].radius = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. print</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            arr[i].printInfo();</span><br><span class="line">          <span class="comment">//System.out.println(&quot;Radius is &quot; + arr[i].radius + &quot; area &quot;</span></span><br><span class="line">                    <span class="comment">//+ arr[i].getArea());</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> radius;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">getArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">3.14</span> * radius * radius;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Radius is &quot;</span> + radius + <span class="string">&quot; area &quot;</span></span><br><span class="line">        + getArea());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Object-array-exercise-1"><a href="#Object-array-exercise-1" class="headerlink" title="Object array exercise 1"></a>Object array exercise 1</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array可以存基本数据类型，也可以存引用数据类型</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">创建一个对象数组，长度为3</span></span><br><span class="line"><span class="comment">输入名字和成绩</span></span><br><span class="line"><span class="comment">打印名字和成绩</span></span><br><span class="line"><span class="comment">用冒泡排序，从高到低打印成绩</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Student[] stu = <span class="keyword">new</span> Student[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            stu[i] = <span class="keyword">new</span> Student();</span><br><span class="line">            System.out.println(<span class="string">&quot;Please enter name for &quot;</span> + (i+<span class="number">1</span>));</span><br><span class="line">            stu[i].name = scan.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;Please enter score for &quot;</span> + (i+<span class="number">1</span>));</span><br><span class="line">            stu[i].score = scan.nextDouble();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(stu[i].name + <span class="string">&quot; &quot;</span> + stu[i].score);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; stu.length ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; stu.length - i; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(stu[j].score &lt; stu[j + <span class="number">1</span>].score)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">double</span> temp = stu[j].score;</span><br><span class="line">                    stu[j].score = stu[j+<span class="number">1</span>].score;</span><br><span class="line">                    stu[j+<span class="number">1</span>].score = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(stu[i].name + stu[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>Encasulated version for the above program</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Student[] stu = <span class="keyword">new</span> Student[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            stu[i] = <span class="keyword">new</span> Student();</span><br><span class="line">            System.out.println(<span class="string">&quot;Please enter name for &quot;</span> + (i+<span class="number">1</span>));</span><br><span class="line">            stu[i].setName(scan.next());</span><br><span class="line">            System.out.println(<span class="string">&quot;Please enter score for &quot;</span> + (i+<span class="number">1</span>));</span><br><span class="line">            stu[i].setScore(scan.nextDouble());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(stu[i].getName() + <span class="string">&quot; &quot;</span> + stu[i].getScore());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; stu.length ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; stu.length - i; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(stu[j].getScore() &lt; stu[j + <span class="number">1</span>].getScore())</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="comment">/*</span></span><br><span class="line"><span class="comment">                  Need to note that we need to set score, instead of get one </span></span><br><span class="line"><span class="comment">                  */</span></span><br><span class="line">                    <span class="keyword">double</span> temp = stu[j].getScore();</span><br><span class="line">                    stu[j].setScore(stu[j+<span class="number">1</span>].getScore());</span><br><span class="line">                    stu[j+<span class="number">1</span>].setScore(temp);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stu.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(stu[i].getName() + stu[i].getScore());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String n)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(Double s)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        score = s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="Tipis-methods-for-binary-search"><a href="#Tipis-methods-for-binary-search" class="headerlink" title="Tipis: methods for binary search"></a>Tipis: methods for binary search</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> target = <span class="number">5</span>;</span><br><span class="line">        System.out.println(binarySearch(arr, target));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> target)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (start + end) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (target == arr[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (target &gt; arr[mid])</span><br><span class="line">            &#123;</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="Encapsulation"><a href="#Encapsulation" class="headerlink" title="Encapsulation"></a>Encapsulation</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1) 封装的实现靠权限修饰符来控制可见的范围</span><br><span class="line">            本类   本包  其他包子类  任意位置</span><br><span class="line">private:     Y      N       N        N</span><br><span class="line">(default):   Y      Y       N        N</span><br><span class="line">protected:   Y      Y       Y        N</span><br><span class="line">public       Y      Y       Y        Y</span><br><span class="line"></span><br><span class="line">(2)哪些可以加权限修饰</span><br><span class="line">class, attribute, methods, constructor, 内部类</span><br><span class="line"></span><br><span class="line">(3) 分别可以加什么权限修饰符</span><br><span class="line">class: default &#x2F; public, 如果class前面有public， 那么必须与源文件名相同</span><br><span class="line">attribute: All</span><br><span class="line">methods: All</span><br><span class="line"></span><br><span class="line">(4) 大多数情况下属性的封装都是private, 提供get&#x2F;set methods</span><br><span class="line">(5) 大多数情况下methods都是public</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Circle c1 = <span class="keyword">new</span> Circle();</span><br><span class="line">        <span class="comment">//c1.radius = 1.0</span></span><br><span class="line">        c1.setRadius(<span class="number">3.0</span>);</span><br><span class="line">        System.out.println(c1.getRadius());<span class="comment">//不set就是默认值,因为radius是member variable</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> radius;<span class="comment">//属性封装</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">(<span class="keyword">double</span> r)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(r &gt; <span class="number">0</span>)<span class="comment">//control assignment</span></span><br><span class="line">        &#123;</span><br><span class="line">            radius = r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getRadius</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> radius;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>Encapsulation exercise</strong> </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1, Declare student class</span><br><span class="line">2. Attributes: Name, Age, Score and use private to encapsulate</span><br><span class="line">3. Provide getInfo() to return info of Student class</span><br><span class="line">4. Use set() to assign values, use getInfo to get student info</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        s1.setName(scan.next());</span><br><span class="line">        s1.setAge(scan.nextInt());</span><br><span class="line">        s1.setScore(scan.nextDouble());</span><br><span class="line">        s1.getInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">double</span> score)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Name is &quot;</span> + getName() + <span class="string">&quot; age is &quot;</span> +</span><br><span class="line">                getAge() + <span class="string">&quot; score is &quot;</span> + getScore());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h3 id="Constructor"><a href="#Constructor" class="headerlink" title="Constructor"></a>Constructor</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1. constructor: create object</span><br><span class="line">和new一起使用，每次调用它就是创建新的对象</span><br><span class="line"></span><br><span class="line">constructor 长得像方法，编译后是一个实例初始化方法</span><br><span class="line"></span><br><span class="line">2. 所以class都有constructor， 如果一个class没有显式constructor, 编译器</span><br><span class="line">会生成默认的无参数constructor</span><br><span class="line">如果declare constructor,编译器就不会生成默认的</span><br><span class="line"></span><br><span class="line">3.语法结构</span><br><span class="line">public Circle()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">public Circle(double d)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">4. Constructor没有返回值类型，也不写void</span><br><span class="line">5. constructor可以重载</span><br></pre></td></tr></table></figure>

<p><strong>Constructor with array</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">double</span>[] list = &#123;<span class="number">3.2</span>,<span class="number">2.3</span>,<span class="number">3.4</span>,<span class="number">5.6</span>&#125;;</span><br><span class="line">        <span class="keyword">double</span>[] new_list = &#123;<span class="number">3.26</span>, <span class="number">7.8</span>&#125;;</span><br><span class="line">        Circle c = <span class="keyword">new</span> Circle(list, <span class="number">3</span>);</span><br><span class="line">        c.setRadius(new_list);</span><br><span class="line">        c.printInfo();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span>[] radius;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> permeter;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Circle</span><span class="params">(<span class="keyword">double</span>[] r, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        radius = r;</span><br><span class="line">        permeter = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; radius.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Radius is &quot;</span> + radius[i] + <span class="string">&quot; &quot;</span> + permeter);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRadius</span><span class="params">(<span class="keyword">double</span>[] radius)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.radius = radius;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Constructor-exercise"><a href="#Constructor-exercise" class="headerlink" title="Constructor exercise"></a>Constructor exercise</h3><ol>
<li><p>Declare Student class</p>
<ul>
<li>private attributes: name, age, score</li>
<li>Provide parameter constructor and non parameter constructor</li>
<li>Provide public get/set</li>
<li>Provide getInfo() methods, return info of Student class</li>
</ul>
</li>
<li><p>In main</p>
<ul>
<li>Use both constructor to create variables</li>
<li>set attribute</li>
<li>call getinfo()</li>
</ul>
</li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringPractice01</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span><span class="comment">//args is local variable</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">        s1.setName(<span class="string">&quot;ALEX&quot;</span>);</span><br><span class="line">        s1.setAge(<span class="number">20</span>);</span><br><span class="line">        s1.setScore(<span class="number">88.2</span>);</span><br><span class="line"></span><br><span class="line">        Student s2 = <span class="keyword">new</span> Student(<span class="string">&quot;Bryce&quot;</span>, <span class="number">23</span>, <span class="number">98</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(s1.getInfo());</span><br><span class="line">        System.out.println(s2.getInfo());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">double</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age, <span class="keyword">double</span> score)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScore</span><span class="params">(<span class="keyword">double</span> score)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getScore</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Name &quot;</span> + name + <span class="string">&quot; Age &quot;</span>  + age + <span class="string">&quot; Score &quot;</span> + score;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Java Basic</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Multimedia Information Systems Lecture 10</title>
    <url>/2021/01/12/CSE408-LECTURE-10/</url>
    <content><![CDATA[<h2 id="Image-Processing-part-I"><a href="#Image-Processing-part-I" class="headerlink" title="Image Processing part I"></a>Image Processing part I</h2><ul>
<li><p>image representation</p>
<p>pixels is a picture elements, represented by a continuous elements</p>
</li>
</ul>
<h3 id="Image-size"><a href="#Image-size" class="headerlink" title="Image size"></a>Image size</h3><ul>
<li>refers to both picture resolution and size</li>
</ul>
]]></content>
      <categories>
        <category>Multimedia Information Systems</category>
      </categories>
      <tags>
        <tag>CSE408</tag>
      </tags>
  </entry>
  <entry>
    <title>Software Analysis and Design Lecture 3-8</title>
    <url>/2021/01/11/CSE460-Lecture-3-7/</url>
    <content><![CDATA[<p>Requirements is not necessities</p>
<p>Requirement interact with tasks -&gt; stps<br>i.e. Pacman video game involved requirement </p>
<p>Use case diagram is used to represent requirements</p>
<p>Activity Diagram: sequence of something, condition, loop<br>State diagram</p>
<a id="more"></a>

<h3 id="Functional"><a href="#Functional" class="headerlink" title="Functional"></a>Functional</h3><p>i.e.<br>Ensure normal song is played when no pellets are eaten</p>
<ul>
<li><p>what the software do </p>
</li>
<li><p>Basically if you have to program it, it’s functional</p>
</li>
<li><p>if its not a <strong>constraint</strong> then its functional</p>
</li>
</ul>
<p>anything the software will do is considered a functional requirement</p>
<h3 id="Non-fuctional"><a href="#Non-fuctional" class="headerlink" title="Non-fuctional"></a>Non-fuctional</h3><p>we may still need to code,<br>non fuctional is about  <strong>quality</strong></p>
<p>i.e.</p>
<ol>
<li>Add multi-device functionality (mouse/keyboard, controller)</li>
</ol>
<h3 id="Not-a-requirement"><a href="#Not-a-requirement" class="headerlink" title="Not a requirement"></a>Not a requirement</h3><ul>
<li><p>Ages 3+ should be able to play the game and easily figure out the baisc movement of pac-man<br>(<strong>Hard to test, out of devlopers’ responsibility</strong>)</p>
</li>
<li><p>Code for the actual Pac-Man game need to be well documented and clear enough<br>(<strong>Not valuable for customer</strong>)</p>
</li>
<li><p>Program must always load “properly”<br>(<strong>If related to quality, be more specific</strong>)</p>
</li>
<li><p>Add a timer to the <em>previous functionality</em> that decreases per round<br>(<strong>Violet independent</strong>)</p>
</li>
</ul>
<h3 id="WHAT-vs-HOW"><a href="#WHAT-vs-HOW" class="headerlink" title="WHAT vs. HOW"></a>WHAT vs. HOW</h3><ul>
<li>Ask users what they need, not how to do that</li>
<li>Customer: I need a PacMan game</li>
<li>Developer: classes…functions…</li>
</ul>
<h2 id="Lecture-4"><a href="#Lecture-4" class="headerlink" title="Lecture 4"></a>Lecture 4</h2><h3 id="Use-case-Diagrams"><a href="#Use-case-Diagrams" class="headerlink" title="Use case Diagrams"></a>Use case Diagrams</h3><p><strong>Use case: **put the **title</strong> of one requirement inside.</p>
<p><strong>Use cases</strong> capture requirements.</p>
<p><strong>Actor</strong> –put the <strong>name</strong> of an actor at the bottom side.</p>
<p>An <strong>actor</strong> specifies a <strong>role</strong> played by an <strong>external entity</strong></p>
<p>who? -&gt; actor</p>
<ol>
<li>pacman = player</li>
<li>Ghost = enemy = system = AI</li>
</ol>
<p><strong>Each oval is a requirements</strong></p>
<p><strong>Each person is  an actor</strong></p>
<h2 id="LECTURE-5"><a href="#LECTURE-5" class="headerlink" title="LECTURE 5"></a>LECTURE 5</h2><p>Use case diagram is most important, sequence and state diagram is used to help on details</p>
<p><strong>Activities</strong></p>
<ul>
<li>what is an activity: steps, actions in particular conditions, loops</li>
<li>what is the difference between activity and requirement?</li>
</ul>
<p>Activity is <strong>not</strong> equal to requirement.</p>
<p>Activity diagram represents <strong>Algorithm</strong></p>
<p>requirements are comprised of steps/actions</p>
<p>if requirement is dish, activity is elements inside dish.</p>
<p>**State diagram: every lines has text on it, has no diamonds **</p>
<p><strong>Activity diagram has diamonds, not neccessary has text above line</strong></p>
<ul>
<li><p>States, represents as box. the information in the box is value for something</p>
</li>
<li><p>Event is a line, to exhibit some predictable from of behavior</p>
<p><strong>state diagram and state machine diagram are the same</strong></p>
</li>
</ul>
<h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="Lecture-6"><a href="#Lecture-6" class="headerlink" title="Lecture 6"></a>Lecture 6</h2><ul>
<li><p>Object-oriented analysis is a method of analysis that examines <strong>requirements</strong>  from the persepective of the <strong>classes and objects</strong></p>
<ul>
<li><strong>(Inheritance, composition, association)</strong></li>
</ul>
</li>
<li><p>Object-oriented design is a method of <strong>implementation</strong></p>
</li>
</ul>
<p><strong>Inheritance</strong>: The arrow point to B, so B is parent</p>
<p><strong>Composition / aggregation</strong>: Black diamond is composition, white diamond is aggregation. white diamond, optional. Black diamond, something that must hav</p>
<p><strong>Association</strong>: has <strong>arrow</strong> a —-&gt; b means a calls b’s method</p>
<p>——–x means static</p>
<p>~ means protected</p>
<h2 id="Lecture-7-Objected-Oriented-II"><a href="#Lecture-7-Objected-Oriented-II" class="headerlink" title="Lecture 7 Objected Oriented II"></a>Lecture 7 Objected Oriented II</h2><p>**Class diagrams **</p>
<ul>
<li><p>modifiers</p>
</li>
<li><p>attributes  </p>
</li>
<li><p>methods</p>
<p>(+ - )</p>
</li>
</ul>
<p><strong>Relationships</strong></p>
<ul>
<li>Association / Dependency (<strong>Use</strong>)</li>
<li>Aggregation / composition (<strong>has</strong>)</li>
<li>Generalization / specialization/ realization ( Inhertence: <strong>is</strong>)</li>
</ul>
<p>Represent <strong>Class a is using Class b</strong></p>
<ul>
<li>Solid line bewteen them (Association)</li>
<li>No arrows means a is using b, and b is using a</li>
<li>Usually we place an arrowhead, a point to b means a is using b.</li>
</ul>
<h3 id="Association"><a href="#Association" class="headerlink" title="Association"></a>Association</h3><ul>
<li>Use relationship, it can be two direction or single direction, depends on whether it has arrow. With arrow, only one direction, Student -&gt; book means student uses book.</li>
</ul>
<h3 id="Aggregation-Composition"><a href="#Aggregation-Composition" class="headerlink" title="Aggregation / Composition"></a><strong>Aggregation / Composition</strong></h3><ul>
<li>White diamond is aggregation (optional)</li>
<li>Black diamond is composition (necessary)</li>
<li>Diamond point to the <strong>Owner</strong>, i.e. Car have engine, black diamond point to <strong>Car</strong></li>
<li>If I <strong>new Object</strong>, that is a black diamond.</li>
</ul>
<h3 id="Generalization-Realization-Specialization"><a href="#Generalization-Realization-Specialization" class="headerlink" title="Generalization / Realization/ Specialization"></a>Generalization / Realization/ Specialization</h3><p><strong>Generalization **represent **Inheritance</strong> : Tiger is a animal,  <strong>a solid line, traingle point to person</strong> means Student is a person,</p>
<p><strong>Realization</strong>: The relationship between class and interface, represent class is the realization of features  of the inteface. <strong>Dash line with traingle arrow head</strong></p>
<p>We can use inheritance between two interfaces, using solid line, and keywords “extends”</p>
<p><strong>Q/A:</strong> Inheritance from parent to child interface <strong>No</strong></p>
<h2 id="Lecture-8-Objected-Oriented-III"><a href="#Lecture-8-Objected-Oriented-III" class="headerlink" title="Lecture 8 Objected Oriented III"></a>Lecture 8 Objected Oriented III</h2><p>inheritance / implement difference?</p>
<ul>
<li><p>Inheritance uses <strong>extends</strong></p>
</li>
<li><p>implement uses <strong>inteface</strong></p>
</li>
</ul>
<p>  <strong>Super</strong> calling constructor of parent class</p>
<h2 id="Lecture-9"><a href="#Lecture-9" class="headerlink" title="Lecture 9"></a>Lecture 9</h2>]]></content>
      <categories>
        <category>Software Analysis and Design</category>
      </categories>
      <tags>
        <tag>CSE460</tag>
      </tags>
  </entry>
  <entry>
    <title>Numpy, pandas, scikit</title>
    <url>/2021/02/16/Python-Data-Analysis/</url>
    <content><![CDATA[<h2 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h2><ul>
<li>Scatter graph is used to represent the relationship between variables</li>
<li>折线图体现变化， 散点图体现x和y的关系，条形图统计离散数据，直方图统计连续数据</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = range(<span class="number">0</span>, <span class="number">120</span>)</span><br><span class="line">y = [random.randint(<span class="number">20</span>, <span class="number">35</span>) <span class="keyword">for</span> i</span><br><span class="line">     <span class="keyword">in</span> range(<span class="number">120</span>)]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># adjust x</span></span><br><span class="line"><span class="comment">#_x = list(x)</span></span><br><span class="line">_xtick_labels = [<span class="string">&quot;10:&#123;&#125; min&quot;</span></span><br><span class="line">                      .format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>)]</span><br><span class="line">_xtick_labels += [<span class="string">&quot;11:&#123;&#125;&quot;</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">60</span>)]</span><br><span class="line">plt.xticks(list(x)[::<span class="number">3</span>], _xtick_labels[::<span class="number">3</span>], rotation=<span class="number">45</span>)</span><br><span class="line"></span><br><span class="line">plt.xlabel(<span class="string">&quot;Time&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;Temperatur unit(C)&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;Temprature from 10:12&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>



<h2 id="x-y-and-grid"><a href="#x-y-and-grid" class="headerlink" title="x, y and grid"></a>x, y and grid</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">y = [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x = range(<span class="number">11</span>, <span class="number">31</span>)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.plot(x, y)</span><br><span class="line"></span><br><span class="line">_xtick_labels = [<span class="string">&quot;&#123;&#125; years old&quot;</span>.format(i) <span class="keyword">for</span> i <span class="keyword">in</span> x]</span><br><span class="line">plt.xticks(x, _xtick_labels, rotation=<span class="number">45</span>)</span><br><span class="line">plt.yticks(range(<span class="number">0</span>, <span class="number">9</span>))</span><br><span class="line"><span class="comment"># grid</span></span><br><span class="line">plt.grid(alpha=<span class="number">0.4</span>)  <span class="comment"># alpha is opacity</span></span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<a id="more"></a>

<h3 id="Numpy"><a href="#Numpy" class="headerlink" title="Numpy"></a>Numpy</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">t1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">print(t1)</span><br><span class="line"></span><br><span class="line">t2 = np.array(range(<span class="number">10</span>))</span><br><span class="line">print(t2)</span><br><span class="line"></span><br><span class="line">t3 = np.arange(<span class="number">4</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">print(t3)</span><br><span class="line"></span><br><span class="line">t4 = np.array(range(<span class="number">1</span>, <span class="number">4</span>), dtype=float)</span><br><span class="line">print(t4)</span><br><span class="line">print(t4.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment"># numpy boolean</span></span><br><span class="line">t5 = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>], dtype=bool)</span><br><span class="line">print(t5)</span><br><span class="line"></span><br><span class="line"><span class="comment"># adjust dtype</span></span><br><span class="line">t6 = t5.astype(<span class="string">&quot;int8&quot;</span>)</span><br><span class="line">print(t6)</span><br><span class="line">print(t6.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment"># decimal point</span></span><br><span class="line">t7 = np.array([random.random()</span><br><span class="line">               <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)])</span><br><span class="line">print(t7)</span><br><span class="line"></span><br><span class="line">t8 = np.round(t7, <span class="number">2</span>) <span class="comment"># two decimal place</span></span><br><span class="line">print(t8)</span><br></pre></td></tr></table></figure>



<h2 id="Two-dimensional-and-three-dimensional-array"><a href="#Two-dimensional-and-three-dimensional-array" class="headerlink" title="Two dimensional and three dimensional array"></a>Two dimensional and three dimensional array</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">t2 = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line">print(t2.shape) <span class="comment"># (2, 3)</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;t3 is &#x27;</span>)</span><br><span class="line">t3 = np.array([[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]], [[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]]])</span><br><span class="line">print(t3.shape) <span class="comment"># (2, 2, 3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#shape(column, row)</span></span><br><span class="line">t4 = np.arange(<span class="number">12</span>)</span><br><span class="line">print(t4.reshape(<span class="number">1</span>,<span class="number">12</span>)) <span class="comment"># two dimension</span></span><br><span class="line">print(t4.reshape(<span class="number">12</span>,)) <span class="comment"># one dimension</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># b.flatten() to transform two-d array to 1D array</span></span><br></pre></td></tr></table></figure>



<h3 id="Reshape"><a href="#Reshape" class="headerlink" title="Reshape"></a>Reshape</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># broadcast mechanism.</span></span><br><span class="line"><span class="comment"># if t5 is an array, t5 + 2 we got result that all</span></span><br><span class="line"><span class="comment"># members increments 2</span></span><br><span class="line"><span class="comment"># Array - array, it must has at least one dimension</span></span><br><span class="line"><span class="comment"># correspond. Either column or row</span></span><br><span class="line"></span><br><span class="line">t1 = np.arange(<span class="number">24</span>)</span><br><span class="line">print(t1.reshape(<span class="number">4</span>, <span class="number">6</span>))</span><br><span class="line">t2 = t1.reshape(<span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">t3 = t1.reshape(<span class="number">24</span>,)</span><br><span class="line">print(t3.sum())</span><br></pre></td></tr></table></figure>



<h3 id="Three-way-to-transpose"><a href="#Three-way-to-transpose" class="headerlink" title="Three way to transpose"></a>Three way to transpose</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">t2 = np.arange(<span class="number">24</span>).reshape(<span class="number">4</span>, <span class="number">6</span>)</span><br><span class="line">print(t2)</span><br><span class="line"></span><br><span class="line">print(t2.transpose())</span><br><span class="line"></span><br><span class="line">print(t2.T) <span class="comment"># Same</span></span><br><span class="line"></span><br><span class="line">print(t2.swapaxes(<span class="number">1</span>,<span class="number">0</span>))</span><br></pre></td></tr></table></figure>



<h3 id="Slicing-index-row-and-column"><a href="#Slicing-index-row-and-column" class="headerlink" title="Slicing, index, row and column"></a>Slicing, index, row and column</h3><p>Siling: a group of value</p>
<p>Index: a single value</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">us_file_path = <span class="string">&quot;./youtube_video_data/US_video_data_numbers.csv&quot;</span></span><br><span class="line">uk_file_path = <span class="string">&quot;./youtube_video_data/GB_video_data_numbers.csv&quot;</span></span><br><span class="line"></span><br><span class="line">t1 = np.loadtxt(us_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">t2 = np.loadtxt(uk_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(t1)</span></span><br><span class="line">print(t2)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;*&#x27;</span> * <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># get one row</span></span><br><span class="line"><span class="comment"># print(t2[2])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># continuous get many rows</span></span><br><span class="line"><span class="comment">#  print(t2[2:])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># non-continuous get many rows</span></span><br><span class="line"><span class="comment"># print(t2[[2,8,10]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get column</span></span><br><span class="line"><span class="comment"># print(t2[:, 0])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># continuously get column</span></span><br><span class="line"><span class="comment">#print(t2[:, 2:])  # 从第二列开始取,note：comma</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># non-continuously get column</span></span><br><span class="line"><span class="comment">#print(t2[:,[0, 2]]) # 取第0列和第二列</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># multiple columns and rows</span></span><br><span class="line"><span class="comment"># a = t2[2,3]</span></span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line"><span class="comment"># print(type(a))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># the third row to fifth row, second column to 4th column</span></span><br><span class="line"><span class="comment"># b = t2[2:5, 1:4]</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># get multiple non-neighbour point</span></span><br><span class="line"><span class="comment"># c = t2[[0,2],[0,1]] # NOTE! It will give you [0,0] and [2,1]</span></span><br><span class="line"><span class="comment"># c = t2[[0, 2, 2], [0, 1, 3]]</span></span><br><span class="line"><span class="comment"># print(c)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Replace-number-to-nan"><a href="#Replace-number-to-nan" class="headerlink" title="Replace number to nan"></a>Replace number to nan</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">t1 = np.arange(<span class="number">24</span>)</span><br><span class="line">t2 = t1.reshape([<span class="number">4</span>, <span class="number">6</span>])</span><br><span class="line"><span class="comment"># print(t3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取t3中比10小的数，改成3</span></span><br><span class="line"><span class="comment"># t3[t3 &lt; 10] = 3</span></span><br><span class="line"><span class="comment"># print(t3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把小于10的数字替换为0，把大于10的替换为10</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.</span></span><br><span class="line"><span class="comment"># t3[t3 &lt; 10] = 0</span></span><br><span class="line"><span class="comment"># t3[t3 &gt; 10] = 10</span></span><br><span class="line"><span class="comment"># print(t3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.</span></span><br><span class="line"><span class="comment"># t4 = np.where(t3 &lt;= 10, 0, 10) # 三元运算</span></span><br><span class="line"><span class="comment"># print(t4)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Clip</span></span><br><span class="line"><span class="comment"># t4 = t3.clip(10, 18) # 小于10 替换成10， 大于18替换为18</span></span><br><span class="line"><span class="comment"># print(t4)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 把第四行第四个数换成nan，需要先astype成float</span></span><br><span class="line">t2 = t2.astype(float)</span><br><span class="line">t2[<span class="number">3</span>, <span class="number">3</span>] = np.nan</span><br><span class="line">print(t2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;*&#x27;</span> * <span class="number">100</span>)</span><br><span class="line"><span class="comment">#第一列全是0</span></span><br><span class="line"><span class="comment">#t3[:, 0] = 0</span></span><br><span class="line"><span class="comment">#print(t3)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不为0的个数是多少个</span></span><br><span class="line"><span class="comment">#print(np.count_nonzero(t3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># true/false nan</span></span><br><span class="line"><span class="comment"># print(np.isnan(t3))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># t3 = np.arange(12).reshape(3, 4)</span></span><br><span class="line"><span class="comment"># print(t3)</span></span><br><span class="line"><span class="comment"># print(np.sum(t3))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 计算行上的sum</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(np.sum(t3, axis=0))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 计算列上的sum</span></span><br><span class="line"><span class="comment"># print(np.sum(t3, axis=1))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每一列的sum和mean,median</span></span><br><span class="line"><span class="comment"># print(t2.sum(axis=0))</span></span><br><span class="line"><span class="comment"># print(t2.mean(axis=0))</span></span><br><span class="line"><span class="comment"># print(np.median(t2, axis=0))</span></span><br><span class="line"><span class="comment"># print(t2.max(axis=0))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(np.ptp(t2))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># standard deviation: the larger the more unstable</span></span><br><span class="line">print(t2.std(axis=<span class="literal">None</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="Use-mean-values-to-fillout-missing-values"><a href="#Use-mean-values-to-fillout-missing-values" class="headerlink" title="Use mean values to fillout missing values"></a>Use mean values to fillout missing values</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fill_ndarray</span>(<span class="params">t1</span>):</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(t1.shape[<span class="number">1</span>]):  <span class="comment"># 0为行，1为列</span></span><br><span class="line">        temp_col = t1[:, i]  <span class="comment"># 当前这一列</span></span><br><span class="line">         <span class="comment"># 统计nan个数</span></span><br><span class="line">        nan_num = np.count_nonzero(temp_col != temp_col) <span class="comment"># 因为nan != nan</span></span><br><span class="line">        <span class="keyword">if</span> nan_num != <span class="number">0</span>:  <span class="comment"># 不为0说明当前这一列有nan</span></span><br><span class="line">            <span class="comment"># 取出当前一列不为nan的数组</span></span><br><span class="line">            temp_not_nan_col = temp_col[temp_col == temp_col]</span><br><span class="line"></span><br><span class="line">            <span class="comment"># 选中当前nan的位置，赋值为不为nan的均值</span></span><br><span class="line">            temp_col[np.isnan(temp_col)] = temp_not_nan_col.mean()</span><br><span class="line">    <span class="keyword">return</span> t1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># t1 = np.arange(12).reshape(3, 4).astype(&quot;float&quot;)</span></span><br><span class="line">    t1 = np.arange(<span class="number">24</span>).reshape(<span class="number">4</span>, <span class="number">6</span>).astype(<span class="string">&quot;float&quot;</span>)</span><br><span class="line">    <span class="comment"># print(t1)</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment"># print(&#x27;*&#x27; * 100)</span></span><br><span class="line">    t1[<span class="number">1</span>, <span class="number">2</span>:] = np.nan  <span class="comment"># 从第一行，第二列开始后面的几个都是nan</span></span><br><span class="line">    print(t1)</span><br><span class="line"></span><br><span class="line">    t1 = fill_ndarray(t1)</span><br><span class="line">    print(t1)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Exercie-The-US-YouTube-video-comments"><a href="#Exercie-The-US-YouTube-video-comments" class="headerlink" title="Exercie: The US YouTube video comments"></a>Exercie: The US YouTube video comments</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">us_file_path = <span class="string">&quot;./youtube_video_data/US_video_data_numbers.csv&quot;</span></span><br><span class="line">uk_file_path = <span class="string">&quot;./youtube_video_data/GB_video_data_numbers.csv&quot;</span></span><br><span class="line"></span><br><span class="line">t_us = np.loadtxt(us_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">t_uk = np.loadtxt(uk_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取评论的数据</span></span><br><span class="line">t_us_comments = t_us[:, <span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选比5000小的数据</span></span><br><span class="line">t_us_comments = t_us_comments[t_us_comments &lt;= <span class="number">5000</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Find max and min</span></span><br><span class="line">print(t_us_comments.max(), t_us_comments.min())</span><br><span class="line"></span><br><span class="line">d = <span class="number">50</span></span><br><span class="line"></span><br><span class="line">bin_nums = (t_us_comments.max() - t_us_comments.min()) // d</span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.hist(t_us_comments, bin_nums)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Exercise-The-relationship-between-UK-video-likes-and-comments"><a href="#Exercise-The-relationship-between-UK-video-likes-and-comments" class="headerlink" title="Exercise: The relationship between UK video likes, and comments"></a>Exercise: The relationship between UK video likes, and comments</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">us_file_path = <span class="string">&quot;./youtube_video_data/US_video_data_numbers.csv&quot;</span></span><br><span class="line">uk_file_path = <span class="string">&quot;./youtube_video_data/GB_video_data_numbers.csv&quot;</span></span><br><span class="line"></span><br><span class="line">t_us = np.loadtxt(us_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">t_uk = np.loadtxt(uk_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 选 &lt;= 500000的</span></span><br><span class="line">t_uk = t_uk[t_uk[:, <span class="number">1</span>] &lt;= <span class="number">500000</span>]</span><br><span class="line"></span><br><span class="line">t_uk_comments = t_uk[:, <span class="number">-1</span>]</span><br><span class="line">t_uk_like = t_uk[:, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.scatter(t_uk_like, t_uk_comments)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>



<h3 id="Concatenate-two-data"><a href="#Concatenate-two-data" class="headerlink" title="Concatenate two data"></a>Concatenate two data</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载国家数据</span></span><br><span class="line">us_file_path = <span class="string">&quot;./youtube_video_data/US_video_data_numbers.csv&quot;</span></span><br><span class="line">uk_file_path = <span class="string">&quot;./youtube_video_data/GB_video_data_numbers.csv&quot;</span></span><br><span class="line"></span><br><span class="line">us_data = np.loadtxt(us_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line">uk_data = np.loadtxt(uk_file_path, delimiter=<span class="string">&quot;,&quot;</span>, dtype=<span class="string">&quot;int&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加国家信息</span></span><br><span class="line"><span class="comment"># 构造全为0的数据</span></span><br><span class="line">zero_data = np.zeros((us_data.shape[<span class="number">0</span>], <span class="number">1</span>)).astype(int) <span class="comment">#1 表示列</span></span><br><span class="line">ones_data = np.ones((uk_data.shape[<span class="number">0</span>], <span class="number">1</span>)).astype(int)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别添加一列全为0 or 1的数据</span></span><br><span class="line">us_data = np.hstack((us_data, zero_data))</span><br><span class="line">uk_data = np.hstack((uk_data, ones_data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拼接两组数据</span></span><br><span class="line">final_data = np.vstack((uk_data, us_data))</span><br><span class="line">print(final_data)</span><br></pre></td></tr></table></figure>





<h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><h3 id="Basic-silcing-and-key-value-pair"><a href="#Basic-silcing-and-key-value-pair" class="headerlink" title="Basic silcing, and key:value pair"></a>Basic silcing, and key:value pair</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Has index in front</span></span><br><span class="line"><span class="comment">#print(pd.Series([1, 2, 3, 4, 12, 3, 4]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Customized index</span></span><br><span class="line"><span class="comment"># t2 = pd.Series([1,23,2,2,1], index=list(&#x27;abcde&#x27;))</span></span><br><span class="line"><span class="comment"># print(t2)</span></span><br><span class="line"></span><br><span class="line">temp_dict = &#123;<span class="string">&quot;Name&quot;</span>: <span class="string">&quot;Alex&quot;</span>, <span class="string">&quot;Age&quot;</span>: <span class="string">&quot;30&quot;</span>,</span><br><span class="line">             <span class="string">&quot;Tele&quot;</span>: <span class="number">10086</span>&#125;</span><br><span class="line"></span><br><span class="line">t3 = pd.Series(temp_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据的切片</span></span><br><span class="line"><span class="comment"># print(t3[&quot;Age&quot;])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(t3.index)</span></span><br><span class="line"><span class="comment"># 打印里面的值</span></span><br><span class="line"><span class="comment"># for i in t3.index:</span></span><br><span class="line"><span class="comment">#     print(i)</span></span><br><span class="line"></span><br><span class="line">print(list(t3.index)[:<span class="number">2</span>])</span><br></pre></td></tr></table></figure>



<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># has row index and columns index</span></span><br><span class="line"><span class="comment"># print(pd.DataFrame(np.arange(12).reshape(3, 4),</span></span><br><span class="line"><span class="comment">#                    index=list(&quot;abc&quot;), columns=list(&quot;WXYZ&quot;)))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># t1 = pd.DataFrame(np.arange(12).reshape(3, 4),</span></span><br><span class="line"><span class="comment">#                    index=list(&quot;abc&quot;), columns=list(&quot;WXYZ&quot;))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># print(t1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DataFrame 传入字典</span></span><br><span class="line"></span><br><span class="line">d1 = &#123;<span class="string">&quot;name&quot;</span>:[<span class="string">&quot;alex&quot;</span>, <span class="string">&quot;lear&quot;</span>],</span><br><span class="line">      <span class="string">&quot;age&quot;</span>: [<span class="number">30</span>, <span class="number">32</span>], <span class="string">&quot;tel&quot;</span>: [<span class="number">100</span>, <span class="number">123</span>]&#125;</span><br><span class="line">t1 = pd.DataFrame(d1)</span><br><span class="line">print(t1)</span><br></pre></td></tr></table></figure>



<h3 id="loc-function"><a href="#loc-function" class="headerlink" title="loc function"></a>loc function</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&quot;./dogNames2.csv&quot;</span>)</span><br><span class="line"><span class="comment"># print(df.head())</span></span><br><span class="line"><span class="comment"># print(df.info())</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># DataFrame 排序</span></span><br><span class="line">df = df.sort_values(by=<span class="string">&quot;Count_AnimalName&quot;</span>, ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="comment"># print(df[:20]) #前20个最多的</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取得具体某一列</span></span><br><span class="line"><span class="comment"># print(df[:20][&quot;Row_Labels&quot;])</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1. 方括号写数字表示取行，对行进行操作</span></span><br><span class="line"><span class="string">2. 写字符串表示取列index，对列进行操作</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">print(type(df[<span class="string">&quot;Row_Labels&quot;</span>]))  <span class="comment"># 变成series了</span></span><br><span class="line"></span><br><span class="line">t3 = pd.DataFrame(np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>, <span class="number">4</span>), index=list(<span class="string">&quot;abc&quot;</span>), columns=list(<span class="string">&quot;wxyz&quot;</span>))</span><br><span class="line">print(t3)</span><br><span class="line"></span><br><span class="line">print(t3.loc[<span class="string">&quot;a&quot;</span>, <span class="string">&quot;z&quot;</span>])  <span class="comment"># 3 type is int64</span></span><br><span class="line">print(t3.loc[<span class="string">&quot;a&quot;</span>]) <span class="comment"># 只取a 这一行</span></span><br><span class="line">print(t3.loc[:, <span class="string">&quot;z&quot;</span>])<span class="comment"># 只取z 这一列</span></span><br></pre></td></tr></table></figure>



<h3 id="iloc-function"><a href="#iloc-function" class="headerlink" title="iloc function"></a>iloc function</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">t3 = pd.DataFrame(np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>, <span class="number">4</span>), index=list(<span class="string">&quot;abc&quot;</span>), columns=list(<span class="string">&quot;wxyz&quot;</span>))</span><br><span class="line">print(t3)</span><br><span class="line">print(<span class="string">&#x27;*&#x27;</span> * <span class="number">100</span>)</span><br><span class="line"><span class="comment"># 取第二列</span></span><br><span class="line">print(t3.iloc[:, <span class="number">2</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取不连续的多列</span></span><br><span class="line"><span class="comment"># print(t3.iloc[:, [2, 1]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 互换</span></span><br><span class="line"><span class="comment"># [0,2],[0,1]</span></span><br><span class="line"><span class="comment"># [2,2],[2,1]</span></span><br><span class="line"><span class="comment">#print(t3.iloc[[0, 2], [2, 1]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 互换0,3|0,1 和2,3|2,1</span></span><br><span class="line"><span class="comment"># print(t3.iloc[[0, 2], [3, 1]])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取第一行之后的每一行，加上第二列之前的每一列</span></span><br><span class="line">print(t3.iloc[<span class="number">1</span>:, :<span class="number">2</span>])</span><br></pre></td></tr></table></figure>



<h3 id="Select-Data"><a href="#Select-Data" class="headerlink" title="Select Data"></a>Select Data</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&quot;./dogNames2.csv&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 名字出现的次数大于800并且小于1000</span></span><br><span class="line">print(df[(<span class="number">800</span> &lt; df[<span class="string">&quot;Count_AnimalName&quot;</span>]) &amp; (df[<span class="string">&quot;Count_AnimalName&quot;</span>] &lt; <span class="number">1000</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 次数大于800，名字长度大于4</span></span><br><span class="line">print(df[(<span class="number">800</span> &lt; df[<span class="string">&quot;Count_AnimalName&quot;</span>]) &amp; (df[<span class="string">&quot;Row_Labels&quot;</span>].str.len() &gt; <span class="number">4</span>)])</span><br></pre></td></tr></table></figure>





<h3 id="drop-nan"><a href="#drop-nan" class="headerlink" title="drop nan"></a>drop nan</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">t3 = pd.DataFrame(np.arange(<span class="number">12</span>).reshape(<span class="number">3</span>, <span class="number">4</span>), index=list(<span class="string">&quot;abc&quot;</span>), columns=list(<span class="string">&quot;wxyz&quot;</span>))</span><br><span class="line">print(t3)</span><br><span class="line">print(<span class="string">&#x27;*&#x27;</span> * <span class="number">100</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 把t3里面1行之后，一列之前所有值变成nan</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">t3.iloc[<span class="number">1</span>:, :<span class="number">2</span>] = np.nan</span><br><span class="line">print(t3)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 查看true/false, t3对应的位置里是否有nan</span></span><br><span class="line"><span class="comment"># print(pd.isnull(t3))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># w 这一列 不为 nan的那一行</span></span><br><span class="line"><span class="comment">#print(t3[pd.notnull(t3[&quot;w&quot;])])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># how is all, means 全部为nan才删</span></span><br><span class="line"><span class="comment"># how is any, means只要有nan就删</span></span><br><span class="line">t3 = t3.dropna(axis=<span class="number">1</span>, how=<span class="string">&quot;any&quot;</span>)</span><br><span class="line">print(t3)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Exercise-imdb-movies-rating-amp-runtime-distribution"><a href="#Exercise-imdb-movies-rating-amp-runtime-distribution" class="headerlink" title="Exercise: imdb movies, rating &amp; runtime distribution"></a>Exercise: imdb movies, rating &amp; runtime distribution</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;IMDB-Movie-Data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># rating, runtime 分布情况 (连续数据的统计：直方图)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print(df.head(5))</span></span><br><span class="line"><span class="comment"># 只取runtime的values，不要index</span></span><br><span class="line">runtime_data = df[<span class="string">&quot;Runtime (Minutes)&quot;</span>].values</span><br><span class="line"></span><br><span class="line">max_runtime = runtime_data.max()</span><br><span class="line">min_runtime = runtime_data.min()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算组数</span></span><br><span class="line">nums_bin = (max_runtime - min_runtime) // <span class="number">5</span></span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.hist(runtime_data, nums_bin)</span><br><span class="line"></span><br><span class="line"><span class="comment"># x轴从最小值开始显示</span></span><br><span class="line">plt.xticks(range(min_runtime, max_runtime + <span class="number">5</span>, <span class="number">5</span>))</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="Important-Exercise-Give-a-set-of-movie-data-rank-their-genre"><a href="#Important-Exercise-Give-a-set-of-movie-data-rank-their-genre" class="headerlink" title="Important Exercise: Give a set of movie data, rank their genre"></a>Important Exercise: Give a set of movie data, rank their genre</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;IMDB-Movie-Data.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(df.head(<span class="number">1</span>))</span><br><span class="line"><span class="comment"># 统计分类的列表</span></span><br><span class="line"></span><br><span class="line">temp_list = df[<span class="string">&quot;Genre&quot;</span>].str.split(<span class="string">&quot;,&quot;</span>).tolist()  <span class="comment"># [[],[].[]]</span></span><br><span class="line"></span><br><span class="line">genre_list = list(set([i <span class="keyword">for</span> j <span class="keyword">in</span> temp_list <span class="keyword">for</span> i <span class="keyword">in</span> j]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造全为0的数组</span></span><br><span class="line"><span class="comment"># 这样的话genre才是 column index</span></span><br><span class="line">zero_df = pd.DataFrame(np.zeros((df.shape[<span class="number">0</span>], len(genre_list))), columns=genre_list)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 给每个分类加上电影出现的次数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(df.shape[<span class="number">0</span>]):</span><br><span class="line">    <span class="comment"># temp_list[i]是一个列表</span></span><br><span class="line">    <span class="comment"># zero_df.loc[0, [&quot;Sci-fi&quot;, &quot;Thriller&quot;]] = 1</span></span><br><span class="line">    zero_df.loc[i, temp_list[i]] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">print(zero_df.head(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计每个分类电影和的数量</span></span><br><span class="line"></span><br><span class="line">genre_count = zero_df.sum(axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">genre_count = genre_count.sort_values()</span><br><span class="line">print(genre_count)</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">_x = genre_count.index</span><br><span class="line">_y = genre_count.values</span><br><span class="line">plt.bar(range(len(_x)), _y)</span><br><span class="line">plt.xticks(range(len(_x)), _x)</span><br><span class="line"></span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="Merge-Join默认的合并方式"><a href="#Merge-Join默认的合并方式" class="headerlink" title="Merge, Join默认的合并方式"></a>Merge, Join默认的合并方式</h2><ul>
<li>默认的合并方式inner，并集</li>
<li>merge outer，交集，NaN补全</li>
<li>merge left，左边为准，NaN补全</li>
<li>merge right，右边为准，NaN补全</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df1 = pd.DataFrame(np.ones((<span class="number">2</span>, <span class="number">4</span>)), index=[<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>], columns=list(<span class="string">&quot;abcd&quot;</span>))</span><br><span class="line"></span><br><span class="line">df2 = pd.DataFrame(np.zeros((<span class="number">3</span>, <span class="number">3</span>)), index=[<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>], columns=list(<span class="string">&quot;xyz&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 以df1的行为准</span></span><br><span class="line"><span class="comment"># print(df1.join(df2))</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># # 以df2的行为准</span></span><br><span class="line"><span class="comment"># print(df2.join(df1))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Merge 按照列为准合并</span></span><br><span class="line">df3 = pd.DataFrame(np.arange(<span class="number">9</span>).reshape(<span class="number">3</span>, <span class="number">3</span>), columns=list(<span class="string">&quot;fax&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(df1.merge(df3, on=&quot;a&quot;))</span></span><br><span class="line">df3.loc[<span class="number">1</span>, <span class="string">&quot;a&quot;</span>] = <span class="number">1</span></span><br><span class="line"><span class="comment"># print(df3)</span></span><br><span class="line">print(df1)</span><br><span class="line">print(df3)</span><br><span class="line">print(df1.merge(df3, on=<span class="string">&quot;a&quot;</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">     a    b    c    d</span></span><br><span class="line"><span class="string">A  1.0  1.0  1.0  1.0</span></span><br><span class="line"><span class="string">B  1.0  1.0  1.0  1.0</span></span><br><span class="line"><span class="string">   f  a  x</span></span><br><span class="line"><span class="string">0  0  1  2</span></span><br><span class="line"><span class="string">1  3  1  5</span></span><br><span class="line"><span class="string">2  6  7  8</span></span><br><span class="line"><span class="string">     a    b    c    d  f  x</span></span><br><span class="line"><span class="string">0  1.0  1.0  1.0  1.0  0  2</span></span><br><span class="line"><span class="string">1  1.0  1.0  1.0  1.0  3  5</span></span><br><span class="line"><span class="string">2  1.0  1.0  1.0  1.0  0  2</span></span><br><span class="line"><span class="string">3  1.0  1.0  1.0  1.0  3  5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">因为 a有两次1，所以每次 上面的数据merge下面数据的时候，on=&quot;a&quot;</span></span><br><span class="line"><span class="string">都能匹配成功，所以会出现两次0 2 和 3 5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>



<h3 id="Exercise-Starbucks-store-in-CN-and-US"><a href="#Exercise-Starbucks-store-in-CN-and-US" class="headerlink" title="Exercise: Starbucks store in CN and US"></a>Exercise: Starbucks store in CN and US</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 美国和中国的星巴克哪个多</span></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;starbucks_store_worldwide.csv&#x27;</span>)</span><br><span class="line">print(df.head(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分组 DataFrameGroupBy</span></span><br><span class="line">grouped = df.groupby(by=<span class="string">&quot;Country&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以进行遍历,但没必要</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i, j in grouped:</span></span><br><span class="line"><span class="comment">#     print(i)</span></span><br><span class="line"><span class="comment">#     print(&#x27;-&#x27; * 100)</span></span><br><span class="line"><span class="comment">#     print(j)</span></span><br><span class="line"><span class="comment">#     print(&#x27;*&#x27; * 100)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中美数量</span></span><br><span class="line">country_count = grouped[<span class="string">&quot;Brand&quot;</span>].count()</span><br><span class="line">print(country_count[<span class="string">&quot;US&quot;</span>])</span><br><span class="line">print(country_count[<span class="string">&quot;CN&quot;</span>])</span><br></pre></td></tr></table></figure>





<p>**Count the number of Starbucks of each state in the US **</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;starbucks_store_worldwide.csv&#x27;</span>)</span><br><span class="line">print(df.head(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计美国每个州的星巴克的数量</span></span><br><span class="line"></span><br><span class="line">us_data = df[df[<span class="string">&quot;Country&quot;</span>] == <span class="string">&quot;US&quot;</span>]</span><br><span class="line"></span><br><span class="line">grouped = cn_data.groupby(by=<span class="string">&quot;State/Province&quot;</span>).count()[<span class="string">&quot;Brand&quot;</span>]</span><br><span class="line">print(grouped)</span><br></pre></td></tr></table></figure>



<h3 id="店铺总数排名前十的国家"><a href="#店铺总数排名前十的国家" class="headerlink" title="店铺总数排名前十的国家"></a>店铺总数排名前十的国家</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 1. 店铺总数排名前十的国家</span></span><br><span class="line">data1 = df.groupby(by=<span class="string">&quot;Country&quot;</span>).count()[<span class="string">&quot;Brand&quot;</span>].sort_values(ascending=<span class="literal">False</span>)[:<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line">_x = data1.index</span><br><span class="line">_y = data1.values</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.bar(range(len(_x)), _y)</span><br><span class="line"></span><br><span class="line">plt.xticks(range(len(_x)), _x)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>





<h3 id="Rank-cities-that-has-starbucks-in-US"><a href="#Rank-cities-that-has-starbucks-in-US" class="headerlink" title="Rank cities that has starbucks in US"></a>Rank cities that has starbucks in US</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;starbucks_store_worldwide.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line">df = df[df[<span class="string">&quot;Country&quot;</span>] == <span class="string">&quot;US&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Rank cities that has starbucks in US</span></span><br><span class="line">data1 = df.groupby(by=<span class="string">&quot;City&quot;</span>).count()[<span class="string">&quot;Brand&quot;</span>].sort_values(ascending=<span class="literal">False</span>)[:<span class="number">50</span>]</span><br><span class="line"></span><br><span class="line">_x = data1.index</span><br><span class="line">_y = data1.values</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>,<span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.bar(range(len(_x)), _y, width=<span class="number">0.3</span>, color=<span class="string">&quot;orange&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks(range(len(_x)), _x, rotation=<span class="number">45</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>



<h3 id="不同年份书的数量和不同年份书的平均评分情况"><a href="#不同年份书的数量和不同年份书的平均评分情况" class="headerlink" title="不同年份书的数量和不同年份书的平均评分情况"></a>不同年份书的数量和不同年份书的平均评分情况</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;books.csv&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data1 = df.groupby(by=&quot;original_publication_year&quot;).count()</span></span><br><span class="line"><span class="comment"># print(data1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同年份书的数量</span></span><br><span class="line"><span class="comment"># original_publication_year有缺失值，先取到所有非缺失值</span></span><br><span class="line"><span class="comment"># data1 = df[pd.notnull(df[&quot;original_publication_year&quot;])]</span></span><br><span class="line"><span class="comment"># grouped = data1.groupby(by=&quot;original_publication_year&quot;).count()[&quot;title&quot;]</span></span><br><span class="line"><span class="comment"># print(grouped)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同年份书的平均评分情况</span></span><br><span class="line"></span><br><span class="line">data1 = df[pd.notnull(df[<span class="string">&quot;original_publication_year&quot;</span>])]</span><br><span class="line"><span class="comment"># 取data1里面average_rating的值，然后根据发布年份分组，然后算平均值</span></span><br><span class="line">grouped = data1[<span class="string">&quot;average_rating&quot;</span>].groupby(by=data1[<span class="string">&quot;original_publication_year&quot;</span>]).mean()</span><br><span class="line">print(grouped)</span><br><span class="line"></span><br><span class="line">_x = grouped.index</span><br><span class="line">_y = grouped.values</span><br><span class="line"></span><br><span class="line">plt.figure(figsize=(<span class="number">20</span>, <span class="number">8</span>), dpi=<span class="number">80</span>)</span><br><span class="line">plt.plot(range(len(_x)), _y)</span><br><span class="line">plt.xticks(list(range(len(_x)))[::<span class="number">10</span>], _x[::<span class="number">10</span>].astype(int), rotation=<span class="number">45</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="Exerciese-不同类型的紧急情况次数"><a href="#Exerciese-不同类型的紧急情况次数" class="headerlink" title="Exerciese: 不同类型的紧急情况次数"></a>Exerciese: 不同类型的紧急情况次数</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Now we have the data of 250,000 911 emergency calls from 2015 to 2017. </span></span><br><span class="line"><span class="string">Please count the number of different types of emergency situations in these data. </span></span><br><span class="line"><span class="string">If we also want to count the changes in the number of different types of emergency calls </span></span><br><span class="line"><span class="string">in different months, What should I do?</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">df = pd.read_csv(<span class="string">&quot;./911.csv&quot;</span>)</span><br><span class="line"><span class="comment"># print(df.head(5))</span></span><br><span class="line"><span class="comment"># 获取分类情况</span></span><br><span class="line"><span class="comment"># print(df[&quot;title&quot;].str.split(&quot;: &quot;)) # series类型，因为取的是一列, [0]取不到ems事故原因</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历取事故分类的情况</span></span><br><span class="line">temp_list = df[<span class="string">&quot;title&quot;</span>].str.split(<span class="string">&quot;: &quot;</span>).tolist()  <span class="comment"># 出来的是一堆列表，每一个都是两个元素[&#x27;&#x27;, &#x27;&#x27;]</span></span><br><span class="line">cate_list = list(set([i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> temp_list]))  <span class="comment"># 每个i中第一个i的元素</span></span><br><span class="line"><span class="comment"># print(cate_list) # [&#x27;Fire&#x27;, &#x27;EMS&#x27;, &#x27;Traffic&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计每个事故出现的频率</span></span><br><span class="line"><span class="comment"># 1. 构造一个全为0的数组, row 是0-249736， columns是那三类事故</span></span><br><span class="line">zero_df = pd.DataFrame(np.zeros((df.shape[<span class="number">0</span>], len(cate_list))), columns=cate_list)</span><br><span class="line"><span class="comment"># print(zero_df)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 赋值,低时间复杂度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cate <span class="keyword">in</span> cate_list:</span><br><span class="line">    zero_df[cate][df[<span class="string">&quot;title&quot;</span>].str.contains(cate)] = <span class="number">1</span></span><br><span class="line">    print(zero_df)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非常慢的方法, 需要遍历25万次</span></span><br><span class="line"><span class="comment"># for i in range(df.shape[0]):</span></span><br><span class="line"><span class="comment">#     # 列表嵌套列表的情况，我们要选中第i个大列表，然后选第0个元素</span></span><br><span class="line"><span class="comment">#     zero_df.loc[i, temp_list[i][0]] = 1</span></span><br><span class="line"><span class="comment"># print(zero_df)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同类型的紧急情况次数</span></span><br><span class="line">sum_ret = zero_df.sum(axis=<span class="number">0</span>) <span class="comment"># 竖着求和所以是0，相反的</span></span><br><span class="line">print(sum_ret)</span><br><span class="line"></span><br></pre></td></tr></table></figure>





<h3 id="Exercise-不同类型的紧急情况次数2"><a href="#Exercise-不同类型的紧急情况次数2" class="headerlink" title="Exercise: 不同类型的紧急情况次数2"></a>Exercise: 不同类型的紧急情况次数2</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Now we have the data of 250,000 911 emergency calls from 2015 to 2017. </span></span><br><span class="line"><span class="string">Please count the number of different types of emergency situations in these data. </span></span><br><span class="line"><span class="string">If we also want to count the changes in the number of different types of emergency calls </span></span><br><span class="line"><span class="string">in different months, What should I do?</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">df = pd.read_csv(<span class="string">&quot;./911.csv&quot;</span>)</span><br><span class="line"><span class="comment"># print(df.head(5))</span></span><br><span class="line"><span class="comment"># 获取分类情况</span></span><br><span class="line"><span class="comment"># print(df[&quot;title&quot;].str.split(&quot;: &quot;)) # series类型，因为取的是一列, [0]取不到ems事故原因</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历取事故分类的情况</span></span><br><span class="line">temp_list = df[<span class="string">&quot;title&quot;</span>].str.split(<span class="string">&quot;: &quot;</span>).tolist()  <span class="comment"># 出来的是一堆列表，每一个都是两个元素[&#x27;&#x27;, &#x27;&#x27;]</span></span><br><span class="line">cate_list = [i[<span class="number">0</span>] <span class="keyword">for</span> i <span class="keyword">in</span> temp_list]  <span class="comment"># 每个i中第一个i的元素</span></span><br><span class="line">df[<span class="string">&quot;cate&quot;</span>] = pd.DataFrame(np.array(cate_list).reshape((df.shape[<span class="number">0</span>], <span class="number">1</span>))) <span class="comment"># 把cate加到里面</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加一列，然后groupby那一列，很聪明的做法</span></span><br><span class="line">print(df.head(<span class="number">5</span>))</span><br><span class="line">print(df.groupby(by=<span class="string">&quot;cate&quot;</span>).count()[<span class="string">&quot;title&quot;</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python 30 days</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>python-01</title>
    <url>/2021/02/13/python-01/</url>
    <content><![CDATA[<h3 id="For-loop"><a href="#For-loop" class="headerlink" title="For loop"></a>For loop</h3><ol>
<li>Print 4 rows 4 columns rectangle</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">        print(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">    print(<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>Print traiangle</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">row = int(input(<span class="string">&#x27;Type a number&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, row+<span class="number">1</span>):</span><br><span class="line">    print((row - i) * <span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 打印空格</span></span><br><span class="line">    print(i * <span class="string">&quot;* &quot;</span>)  <span class="comment"># 打印星号</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
<ol start="3">
<li><p>Print upside-down triangle</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">l = <span class="number">4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, l + <span class="number">1</span>):</span><br><span class="line">    print((i - <span class="number">1</span>) * <span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 打印空格</span></span><br><span class="line">    print((<span class="number">4</span> - i + <span class="number">1</span>) * <span class="string">&quot;* &quot;</span>)  <span class="comment"># 打印星号</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Diamond</p>
</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">row = int(input(<span class="string">&#x27;Type a number&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, row+<span class="number">1</span>):</span><br><span class="line">    print((row - i) * <span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 打印空格</span></span><br><span class="line">    print(i * <span class="string">&quot;* &quot;</span>)  <span class="comment"># 打印星号</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, row + <span class="number">1</span>):</span><br><span class="line">    print(i * <span class="string">&quot; &quot;</span>, end=<span class="string">&quot;&quot;</span>)  <span class="comment"># 打印空格</span></span><br><span class="line">    print((row - i) * <span class="string">&quot;* &quot;</span>)  <span class="comment"># 打印星号</span></span><br></pre></td></tr></table></figure>







<h3 id="While-loop"><a href="#While-loop" class="headerlink" title="While loop"></a>While loop</h3><ol>
<li>Number guessing</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">flag = <span class="literal">False</span></span><br><span class="line">random_num = random.randint(<span class="number">1</span>, <span class="number">100</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> flag:</span><br><span class="line">    guess = int(input(<span class="string">&#x27;Please type a number you want to guess\n&#x27;</span>))</span><br><span class="line">    print(random_num)</span><br><span class="line">    <span class="keyword">if</span> guess &lt; random_num:</span><br><span class="line">        print(<span class="string">&#x27;Your number is too small&#x27;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess &gt; random_num:</span><br><span class="line">        print(<span class="string">&#x27;Your number is too big&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;perfect&#x27;</span>)</span><br><span class="line">        flag = <span class="literal">True</span></span><br></pre></td></tr></table></figure>



<ol start="2">
<li><p>正序乘法表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">9</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        print(<span class="string">&#x27;%d*%d = %2d\t&#x27;</span> % (i, j, i * j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    print()</span><br></pre></td></tr></table></figure>
</li>
<li><p>逆序乘法表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">9</span></span><br><span class="line"><span class="keyword">while</span> i &gt;= <span class="number">1</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        print(<span class="string">&#x27;%d*%d = %2d\t&#x27;</span>%(j, i, i * j), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    i -= <span class="number">1</span></span><br><span class="line">    print()</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>triangle </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">row = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> row &lt;= <span class="number">5</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= <span class="number">5</span> - row:</span><br><span class="line">        print(<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    k = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> k &lt;= <span class="number">2</span> * row - <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        k += <span class="number">1</span></span><br><span class="line">    print()</span><br><span class="line">    row += <span class="number">1</span></span><br></pre></td></tr></table></figure>



</li>
</ol>
</li>
</ol>
<ol start="5">
<li>pramid</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">*</span></span><br><span class="line"><span class="string">**</span></span><br><span class="line"><span class="string">***</span></span><br><span class="line"><span class="string">****</span></span><br><span class="line"><span class="string">*****</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">5</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= i:</span><br><span class="line">        print(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    print()</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ol start="6">
<li>Rectangular Spotted Graph</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= <span class="number">5</span>:</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> j &lt;= <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">if</span> i == j:</span><br><span class="line">            print(<span class="string">&#x27;X&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> j == <span class="number">5</span> - i + <span class="number">1</span>:</span><br><span class="line">            print(<span class="string">&#x27;X&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&#x27;*&#x27;</span>, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    print()</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">x00000x</span></span><br><span class="line"><span class="string">0x00x00</span></span><br><span class="line"><span class="string">000x000</span></span><br><span class="line"><span class="string">00x0x00</span></span><br><span class="line"><span class="string">0x000x0</span></span><br><span class="line"><span class="string">x00000x</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>



<h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><ol>
<li>Pass info from</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet_user</span>(<span class="params">username</span>):</span></span><br><span class="line">    print(<span class="string">&quot;hello, &quot;</span> + username.title() + <span class="string">&quot;!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">greet_user(input())</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python 30 days</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>CSE408 midterm prep</title>
    <url>/2021/01/12/CSE408-midterm-prep/</url>
    <content><![CDATA[<h2 id="What-is-multimedia"><a href="#What-is-multimedia" class="headerlink" title="What is multimedia?"></a>What is multimedia?</h2><h3 id="Give-examples-of-MM-data"><a href="#Give-examples-of-MM-data" class="headerlink" title="Give examples of MM data"></a>Give examples of MM data</h3><ul>
<li>combinations of text, sound, images, animation, graphics</li>
</ul>
<h3 id="Discuss-a-multimedia-system-you-use-on-one-of-the-following-platforms-mobile-phone-home-PC-TV-Social-media-streaming-video-etc"><a href="#Discuss-a-multimedia-system-you-use-on-one-of-the-following-platforms-mobile-phone-home-PC-TV-Social-media-streaming-video-etc" class="headerlink" title="Discuss a multimedia system you use on one of the following platforms: mobile phone, home PC, TV, Social media, streaming video, etc."></a>Discuss a multimedia system you use on one of the following platforms: mobile phone, home PC, TV, Social media, streaming video, etc.</h3><ul>
<li>Ex: a web-based video editor that lets anyone create a new video by editing, annotating and reminxing videos on the cloud</li>
<li>Searching very large video and image databases for target visual objects, using semantics of objects</li>
</ul>
<h3 id="Explain-three-state-of-the-art-MM-research-topics"><a href="#Explain-three-state-of-the-art-MM-research-topics" class="headerlink" title="Explain three state of the art MM research topics"></a>Explain three state of the art MM research topics</h3><ul>
<li>Mutiple views: allowing photo-realistic (video-quality) synthesis of virtual actores from several cameras or from a single camera under different lighting</li>
<li>Digital fashion: aims to develop smart clothing that can communicate with others such enhanced clothing using wireless communication</li>
<li>3D motion capture: used for multiple actor capture so that multiple real actores in a virtual studio can be used to automatically produce realistic animated models with natural movement</li>
</ul>
]]></content>
      <categories>
        <category>Multimedia Information Systems</category>
      </categories>
      <tags>
        <tag>CSE408</tag>
      </tags>
  </entry>
</search>
